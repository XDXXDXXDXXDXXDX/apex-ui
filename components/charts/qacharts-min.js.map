{"version":3,"file":"qacharts-min.js","sources":["../src/util/event.js","../src/config.js","../src/util/util.js","../src/calculate/calOptions.js","../src/util/timing.js","../src/util/animation.js","../src/calculate/calSeriesColor.js","../src/calculate/calLegendData.js","../src/calculate/calAxisData.js","../src/calculate/calAxisRadarData.js","../src/calculate/calChartBarData.js","../src/calculate/calChartLineData.js","../src/calculate/calChartPieData.js","../src/calculate/calChartRadarData.js","../src/calculate/calChartScatterData.js","../src/calculate/calChartFunnelData.js","../src/draw/drawBackground.js","../src/draw/drawLegend.js","../src/draw/drawAxis.js","../src/draw/drawAxisRadar.js","../src/draw/drawCharts/drawChartBar.js","../src/draw/drawCharts/drawChartLine.js","../src/draw/drawCharts/drawChartPie.js","../src/draw/drawCharts/drawChartRadar.js","../src/draw/drawCharts/drawChartScatter.js","../src/draw/drawCharts/drawChartFunnel.js","../src/draw/drawCharts/drawCharts.js","../src/app.js"],"sourcesContent":["export default class Event {\n  constructor() {\n    this.events = {}\n  }\n\n  /**\n   * 事件监听\n   * @param {String} type\n   * @param {String} listener\n   */\n  addEventListener(type, listener = function() {}) {\n    this.events[type] = this.events[type] || []\n    this.events[type].push(listener)\n  }\n\n  /**\n   * 触发事件\n   * @param {String} type\n   * @param  {...Any} params\n   */\n  trigger(type, ...params) {\n    if (!!this.events[type]) {\n      this.events[type].forEach(listener => {\n        try {\n          listener.apply(null, params)\n        } catch (e) {\n          console.error(e)\n        }\n      })\n    }\n  }\n}\n","export default {\n  animation: true,\n  animationDuration: 1000,\n  animationTiming: 'default', // default, easeIn, easeOut, easeInOut, linear\n  backgroundColor: '#ffffff',\n  colors: ['#7cb5ec', '#f7a35c', '#434348', '#90ed7d', '#f15c80', '#8085e9'], // wxcharts调色盘\n  label: {\n    show: true,\n    fontSize: 10,\n    color: 'auto',\n    margin: 5,\n  },\n  legend: {\n    show: true,\n    type: 'default', // default, circle, line, rect\n    marginTop: 8,\n    itemGap: 15,\n    shapeWidth: 15,\n    shapeHeight: 15,\n    textStyle: {\n      fontSize: 15,\n      color: '#333333',\n      padding: 5,\n    },\n  },\n  padding: [20, 20, 20, 20],\n  bar: {\n    barMaxWidth: 20,\n    barMinWidth: 1,\n    barWidth: 'auto',\n    barGap: 5,\n  },\n  pie: {\n    center: ['50%', '50%'],\n    radius: [0, '80%'],\n    offsetAngle: 0,\n    disablePieStroke: true,\n    labelLine: {\n      lineDotRadius: 3,\n      lineWidth: 1,\n      length1: 25,\n      length2: 15,\n    },\n  },\n  scatter: {\n    radius: 10,\n    opacity: 1,\n    lineWidth: 0,\n    strokeColor: 'auto',\n  },\n  funnel: {\n    width: 'auto',\n    height: 'auto',\n    top: '0%',\n    left: '0%',\n    right: '0%',\n    bottom: '0%',\n    max: 100,\n    min: 0,\n    gap: 5,\n    shape: 'funnel', // funnel, pyramid\n    sort: 'descending', // descending, ascending\n    funnelAlign: 'center', // left, center, right\n    label: {\n      position: 'inside', // inside, outside\n    },\n    itemStyle: {\n      borderColor: '#ffffff',\n      borderWidth: 1,\n    },\n  },\n  line: {\n    smooth: false,\n    connectNulls: false,\n    line: {\n      show: true,\n      lineWidth: 2,\n      color: 'auto',\n      opacity: 1,\n    },\n    symbol: {\n      show: true,\n      type: 'circle', // circle\n      size: 7,\n      color: 'auto',\n    },\n    area: {\n      show: false,\n      color: 'auto',\n      opacity: 0.5,\n    },\n  },\n  radar: {\n    line: {\n      show: true,\n      lineWidth: 1,\n      color: 'auto',\n      opacity: 1,\n    },\n    area: {\n      show: false,\n      color: 'auto',\n      opacity: 0.5,\n    },\n    symbol: {\n      show: true,\n      type: 'circle', // circle\n      size: 7,\n      color: 'auto',\n    },\n  },\n  radarAxis: {\n    shape: 'polygon', // polygon, circle\n    center: ['50%', '50%'],\n    radius: '80%',\n    max: 'auto',\n    splitNumber: 4,\n    axisName: {\n      show: true,\n      textStyle: {\n        fontSize: 15,\n        color: '#666666',\n        margin: 10,\n      },\n    },\n    axisLine: {\n      show: true,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#cccccc',\n        opacity: 1,\n      },\n    },\n    splitLine: {\n      show: true,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#cccccc',\n        opacity: 1,\n      },\n    },\n    splitArea: {\n      odd: {\n        show: true,\n        color: '#f5f5f5',\n        opacity: 1,\n      },\n      even: {\n        show: true,\n        color: '#e6e6e6',\n        opacity: 1,\n      },\n    },\n  },\n  yAxis: {\n    show: true,\n    type: 'value', // category, value\n    max: 'auto',\n    min: 'auto',\n    splitNumber: 4,\n    axisName: {\n      show: true,\n      text: '轴线名称',\n      gap: 10,\n      textStyle: {\n        color: '#666666',\n        fontSize: 15,\n        align: 'center',\n      },\n    },\n    axisLabel: {\n      show: true,\n      rotate: 0,\n      gap: 5,\n      textStyle: {\n        color: '#666666',\n        fontSize: 12,\n      },\n    },\n    axisTick: {\n      show: true,\n      length: 5,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#666666',\n      },\n    },\n    axisLine: {\n      show: true,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#666666',\n      },\n    },\n    axisSplitLine: {\n      show: true,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#dddddd',\n      },\n    },\n  },\n  xAxis: {\n    show: true,\n    type: 'category', // category, value\n    boundaryGap: true, // boundaryGap为true时, 这时候刻度只是作为分隔线，标签和数据点都会在两个刻度之间的带(band)中间\n    axisName: {\n      show: true,\n      text: '轴线名称',\n      gap: 10,\n      textStyle: {\n        color: '#666666',\n        fontSize: 15,\n      },\n    },\n    axisLabel: {\n      show: true,\n      rotate: 0,\n      gap: 5,\n      textStyle: {\n        color: '#666666',\n        fontSize: 12,\n      },\n    },\n    axisTick: {\n      show: true,\n      alignWithLabel: false, // alignWithLabel为true时，刻度线与标签对齐\n      length: 5,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#666666',\n      },\n    },\n    axisLine: {\n      show: true,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#666666',\n      },\n    },\n    axisSplitLine: {\n      show: true,\n      alignWithLabel: false, // alignWithLabel为true时，网格线与标签对齐\n      lineStyle: {\n        lineWidth: 1,\n        color: '#dddddd',\n      },\n    },\n  },\n}\n","/**\n * HEX to HSL\n * @param {String} HEX\n * @return {Array} HSL\n */\nexport function HEX2HSL(hex) {\n  let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n\n  let r = parseInt(result[1], 16)\n  let g = parseInt(result[2], 16)\n  let b = parseInt(result[3], 16)\n\n  ;(r /= 255), (g /= 255), (b /= 255)\n  let max = Math.max(r, g, b),\n    min = Math.min(r, g, b)\n  let h,\n    s,\n    l = (max + min) / 2\n\n  if (max == min) {\n    h = s = 0 // achromatic\n  } else {\n    let d = max - min\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n    }\n    h /= 6\n  }\n\n  s = s * 100\n  s = Math.round(s)\n  l = l * 100\n  l = Math.round(l)\n  h = Math.round(360 * h)\n\n  return [h, s, l]\n}\n\n/**\n * HSL to HEX\n * @param {Array} HSL\n * @return {String} HEX\n */\nexport function HSL2HEX(hsl) {\n  let [h, s, l] = hsl\n  let r, g, b\n\n  h /= 360\n  s /= 100\n  l /= 100\n\n  if (s === 0) {\n    r = g = b = l // achromatic\n  } else {\n    const hue2rgb = (p, q, t) => {\n      if (t < 0) t += 1\n      if (t > 1) t -= 1\n      if (t < 1 / 6) return p + (q - p) * 6 * t\n      if (t < 1 / 2) return q\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n      return p\n    }\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s\n    const p = 2 * l - q\n    r = hue2rgb(p, q, h + 1 / 3)\n    g = hue2rgb(p, q, h)\n    b = hue2rgb(p, q, h - 1 / 3)\n  }\n  const toHex = x => {\n    const hex = Math.round(x * 255).toString(16)\n    return hex.length === 1 ? '0' + hex : hex\n  }\n\n  return `#${toHex(r)}${toHex(g)}${toHex(b)}`\n}\n\n/**\n * 转化坐标\n * @param {Object} origin\n * @param {Array} center\n */\nexport function convertCoordinateOrigin(origin, center) {\n  let [centerX, centerY] = center\n\n  return {\n    x: centerX + origin.x,\n    y: centerY - origin.y,\n  }\n}\n\n/**\n * 判断是否有冲突\n * @param {Object} souce // 待检查对象\n * @param {Object} target // 比较对象\n * @param {Object} distance // 避免冲突的间隙\n */\nexport function isCollision(souce, target, distance) {\n  let isCollision = false\n  if (souce.x > 0 && target.x > 0) {\n    isCollision = souce.y + distance > target.y\n  } else if (souce.x < 0 && target.x < 0) {\n    isCollision = souce.y - distance < target.y\n  }\n\n  return isCollision\n}\n\n/**\n * 检查并避免冲突\n * @param {Object} souce // 待检查对象\n * @param {Object} target // 比较对象\n * @param {Object} distance // 避免冲突的间隙\n */\nexport function avoidCollision(souce, target, distance) {\n  if (target) {\n    while (isCollision(souce, target, distance)) {\n      if (souce.x > 0) {\n        souce.y--\n      } else if (souce.x < 0) {\n        souce.y++\n      }\n    }\n  }\n  return souce\n}\n\n/**\n * 10% => 0.1\n * @param {String} percent\n */\nexport function percentToNum(percent) {\n  if (!!percent) {\n    percent = String(percent).replace('%', '')\n    percent = Number(percent) / 100\n  } else {\n    percent = 0\n  }\n  return percent\n}\n\n/**\n * 判断一个数据是否为对象\n * @param {Any} data\n */\nexport function isObject(data) {\n  return Object.prototype.toString.call(data) === '[object Object]'\n}\n\n/**\n * 判断一个数据是否为数组\n * @param {Any} data\n */\nexport function isArray(data) {\n  return Object.prototype.toString.call(data) === '[object Array]'\n}\n","import { isObject, isArray } from '../util/util'\n\n/**\n * 将来源对象数据补充到目标对象中\n * @param {String} key\n * @param {Object} sources // 来源对象\n * @param {Object} target  // 目标对象\n * @param {Boolean} isCover  // 是否强制来源对象数据覆盖目标对象数据\n */\nexport function replenishData(key, sources, target, isCover = false) {\n  if (!target[key] && target[key] !== 0 && target[key] !== '' && typeof target[key] !== 'boolean') {\n    // console.log(`空值, ${key}, target[key]: ${target[key]}, sources[key]: ${sources[key]}, isCover: ${isCover}`)\n    // (opts参数为空时赋值)\n    if (isObject(sources[key])) {\n      target[key] = Object.assign({}, sources[key])\n    } else if (isArray(sources[key])) {\n      target[key] = [].concat(sources[key])\n    } else {\n      target[key] = sources[key]\n    }\n  } else {\n    // console.log(`不为空值, ${key}, target[key]: ${target[key]}, sources[key]: ${sources[key]}, isCover: ${isCover}`)\n    // (opts参数不为为空时，若数据类型为原始类型和数组则不做处理，对象类型时递归)\n    if (isCover) {\n      if (isObject(sources[key])) {\n        Object.keys(sources[key]).forEach(_key => {\n          replenishData(_key, sources[key], target[key], isCover)\n        })\n      } else if (isArray(sources[key])) {\n        if (key == 'series') {\n          sources[key].forEach((sourcesItem, sourcesIndex) => {\n            Object.keys(sourcesItem).forEach(_key => {\n              replenishData(_key, sources[key][sourcesIndex], target[key][sourcesIndex], true)\n            })\n          })\n        } else {\n          target[key] = [].concat(sources[key])\n        }\n      } else {\n        target[key] = sources[key]\n      }\n    } else {\n      if (isObject(target[key])) {\n        Object.keys(sources[key]).forEach(_key => {\n          replenishData(_key, sources[key], target[key], isCover)\n        })\n      }\n    }\n  }\n}\n\n/**\n * 将opts的数据补充完整\n */\nexport function calOptions() {\n  let { config, opts } = this\n  replenishData('animation', config, opts)\n  replenishData('animationDuration', config, opts)\n  replenishData('animationTiming', config, opts)\n  replenishData('backgroundColor', config, opts)\n  replenishData('colors', config, opts)\n  replenishData('padding', config, opts)\n  replenishData('legend', config, opts)\n\n  switch (opts.type) {\n    case 'bar':\n    case 'line':\n    case 'scatter':\n      if (opts.yAxis && opts.yAxis.type == 'category') {\n        replenishData('show', config.xAxis, opts.yAxis)\n        replenishData('type', config.xAxis, opts.yAxis)\n        replenishData('boundaryGap', config.xAxis, opts.yAxis)\n        replenishData('axisName', config.xAxis, opts.yAxis)\n        replenishData('axisLabel', config.xAxis, opts.yAxis)\n        replenishData('axisTick', config.xAxis, opts.yAxis)\n        replenishData('axisLine', config.xAxis, opts.yAxis)\n        replenishData('axisSplitLine', config.xAxis, opts.yAxis)\n      } else {\n        replenishData('yAxis', config, opts)\n      }\n\n      if (opts.xAxis && opts.xAxis.type == 'value') {\n        replenishData('show', config.yAxis, opts.xAxis)\n        replenishData('type', config.yAxis, opts.xAxis)\n        replenishData('max', config.yAxis, opts.xAxis)\n        replenishData('min', config.yAxis, opts.xAxis)\n        replenishData('splitNumber', config.yAxis, opts.xAxis)\n        replenishData('axisName', config.yAxis, opts.xAxis)\n        replenishData('axisLabel', config.yAxis, opts.xAxis)\n        replenishData('axisTick', config.yAxis, opts.xAxis)\n        replenishData('axisLine', config.yAxis, opts.xAxis)\n        replenishData('axisSplitLine', config.yAxis, opts.xAxis)\n      } else {\n        replenishData('xAxis', config, opts)\n      }\n    case 'radar':\n      replenishData('radarAxis', config, opts)\n      break\n  }\n\n  calSeries.call(this)\n\n  console.log('complete calOptions', this)\n}\n\n/**\n * 将series的数据补充完整\n */\nexport function calSeries() {\n  let { config, opts } = this\n\n  switch (opts.type) {\n    case 'bar':\n      opts.series.forEach(seriesItem => {\n        replenishData('label', config, seriesItem)\n        replenishData('barMaxWidth', config.bar, seriesItem)\n        replenishData('barMinWidth', config.bar, seriesItem)\n        replenishData('barWidth', config.bar, seriesItem)\n        replenishData('barGap', config.bar, seriesItem)\n      })\n      break\n    case 'line':\n      opts.series.forEach(seriesItem => {\n        replenishData('label', config, seriesItem)\n        replenishData('smooth', config.line, seriesItem)\n        replenishData('connectNulls', config.line, seriesItem)\n        replenishData('line', config.line, seriesItem)\n        replenishData('symbol', config.line, seriesItem)\n        replenishData('area', config.line, seriesItem)\n      })\n      break\n    case 'pie':\n      opts.series.forEach(seriesItem => {\n        replenishData('label', config, seriesItem)\n        replenishData('center', config.pie, seriesItem)\n        replenishData('radius', config.pie, seriesItem)\n        replenishData('labelLine', config.pie, seriesItem)\n        replenishData('offsetAngle', config.pie, seriesItem)\n        replenishData('disablePieStroke', config.pie, seriesItem)\n      })\n      break\n    case 'radar':\n      opts.series.forEach(seriesItem => {\n        replenishData('label', config, seriesItem)\n        replenishData('line', config.radar, seriesItem)\n        replenishData('symbol', config.radar, seriesItem)\n        replenishData('area', config.radar, seriesItem)\n      })\n      break\n    case 'scatter':\n      opts.series.forEach(seriesItem => {\n        replenishData('label', config, seriesItem)\n        replenishData('color', config.scatter, seriesItem)\n        replenishData('radius', config.scatter, seriesItem)\n        replenishData('opacity', config.scatter, seriesItem)\n        replenishData('lineWidth', config.scatter, seriesItem)\n        replenishData('strokeColor', config.scatter, seriesItem)\n      })\n      break\n    case 'funnel':\n      opts.series.forEach(seriesItem => {\n        replenishData('label', config, seriesItem)\n        replenishData('position', config.funnel.label, seriesItem.label)\n        replenishData('width', config.funnel, seriesItem)\n        replenishData('height', config.funnel, seriesItem)\n        replenishData('top', config.funnel, seriesItem)\n        replenishData('left', config.funnel, seriesItem)\n        replenishData('right', config.funnel, seriesItem)\n        replenishData('bottom', config.funnel, seriesItem)\n        replenishData('max', config.funnel, seriesItem)\n        replenishData('min', config.funnel, seriesItem)\n        replenishData('gap', config.funnel, seriesItem)\n        replenishData('sort', config.funnel, seriesItem)\n        replenishData('shape', config.funnel, seriesItem)\n        replenishData('funnelAlign', config.funnel, seriesItem)\n        replenishData('itemStyle', config.funnel, seriesItem)\n      })\n      break\n  }\n}\n","export default {\n  easeIn: function(pos) {\n    return Math.pow(pos, 3)\n  },\n  easeOut: function(pos) {\n    return Math.pow(pos - 1, 3) + 1\n  },\n  easeInOut: function(pos) {\n    if ((pos /= 0.5) < 1) {\n      return 0.5 * Math.pow(pos, 3)\n    } else {\n      return 0.5 * (Math.pow(pos - 2, 3) + 2)\n    }\n  },\n  linear: function(pos) {\n    return pos\n  },\n}\n","import Timing from './timing'\n\nexport default class Animation {\n  constructor(opts) {\n    this.isStop = false\n\n    let { type, animation, animationDuration, animationTiming, onProcess, onAnimationFinish } = opts\n\n    let createAnimationFrame = function() {\n      if (typeof requestAnimationFrame !== 'undefined') {\n        return requestAnimationFrame\n      } else if (typeof setTimeout !== 'undefined') {\n        return function(step) {\n          setTimeout(function() {\n            let timeStamp = +new Date()\n            step(timeStamp)\n          }, 17)\n        }\n      }\n    }\n    let animationFrame = createAnimationFrame()\n\n    if (animation) {\n      if (animationTiming == 'default') {\n        switch (type) {\n          case 'bar':\n          case 'line':\n          case 'scatter':\n            animationTiming = 'easeIn'\n            break\n          case 'pie':\n          case 'radar':\n          case 'funnel':\n            animationTiming = 'easeInOut'\n            break\n        }\n      }\n      let timingFunction = Timing[animationTiming]\n      let startTimeStamp = null\n\n      let step = function() {\n        if (this.isStop === true) {\n          onProcess(1)\n          onAnimationFinish()\n          return\n        }\n\n        let timeStamp = +new Date()\n        if (!startTimeStamp) startTimeStamp = timeStamp\n\n        if (timeStamp - startTimeStamp < animationDuration) {\n          let process = (timeStamp - startTimeStamp) / animationDuration\n          process = timingFunction(process)\n          opts.onProcess(process)\n          animationFrame(step)\n        } else {\n          onProcess(1)\n          onAnimationFinish()\n        }\n      }\n      step = step.bind(this)\n\n      animationFrame(step)\n    } else {\n      onProcess(1)\n      onAnimationFinish()\n    }\n  }\n\n  /**\n   * 停止动画\n   */\n  stop() {\n    this.isStop = true\n  }\n}\n","export default function calSeriesColor() {\n  let { type, colors, series } = this.opts\n  const colorsLength = colors.length\n\n  if (type == 'funnel') {\n    series[0].data.sort((a, b) => {\n      if (series[0].sort == 'descending') {\n        return b.value - a.value\n      } else {\n        return a.value - b.value\n      }\n    })\n  }\n\n  if (type == 'pie' || type == 'funnel') {\n    series.forEach(seriesItem => {\n      seriesItem.data.forEach((dataItem, dataIndex) => {\n        dataItem.itemStyle = dataItem.itemStyle || {}\n        if (!dataItem.itemStyle.color) {\n          dataItem.itemStyle.color = colors[dataIndex % colorsLength]\n        }\n      })\n    })\n  }\n\n  series.forEach((seriesItem, seriesIndex) => {\n    seriesItem.itemStyle = seriesItem.itemStyle || {}\n    if (!seriesItem.itemStyle.color) {\n      seriesItem.itemStyle.color = colors[seriesIndex % colorsLength]\n    }\n  })\n\n  console.log('complete calSeriesColor')\n}\n","export default function calLegendData() {\n  if (this.opts.legend.show) {\n    let { context, opts } = this\n    let { type, width, legend, series } = opts\n    let { shapeWidth, shapeHeight, itemGap, marginTop, textStyle } = legend\n    let { fontSize, padding } = textStyle\n    let seriesDataList = []\n    let legendWidth = 0\n    let legendWidthNum = 0\n    let legendList = []\n    let currentRow = []\n\n    context.font = `${fontSize}px`\n\n    if (type == 'pie' || type == 'funnel') {\n      seriesDataList = series[0].data\n    } else {\n      seriesDataList = series\n    }\n\n    seriesDataList.forEach(seriesDataItem => {\n      let { name, itemStyle } = seriesDataItem\n      let measureText = this.context.measureText(name || '').width\n      let itemWidth = shapeWidth + padding + itemGap + measureText\n\n      let obj = {\n        name,\n        measureText,\n        color: typeof itemStyle.color == 'string' ? itemStyle.color : '#000000',\n      }\n\n      if (legendWidthNum + itemWidth > width) {\n        legendList.push(currentRow)\n        legendWidthNum = itemWidth\n        currentRow = [obj]\n      } else {\n        legendWidthNum += itemWidth\n        legendWidth = Math.max(legendWidth, legendWidthNum)\n        currentRow.push(obj)\n      }\n    })\n\n    if (legendList.length == 0) {\n      legendList.push(currentRow)\n    }\n    this.legendData = {\n      legendList,\n      legendWidth: legendWidth - itemGap,\n      legendHeight: legendList.length * Math.max(shapeHeight, fontSize) + (legendList.length - 1) * itemGap + marginTop,\n    }\n  } else {\n    this.legendData = {\n      legendList: [],\n      legendWidth: 0,\n      legendHeight: 0,\n    }\n  }\n\n  console.log('complete calLegendData', this.legendData)\n}\n","export default function calAxisYData() {\n  let { context, opts, legendData, chartData } = this\n  let { width, height, padding, xAxis, yAxis, series } = opts\n\n  let {\n    show: xAxisShow,\n    type: xAxisType,\n    data: xAxisData,\n    boundaryGap: xAxisBoundaryGap,\n    max: xAxisMax,\n    min: xAxisMin,\n    splitNumber: xAxisSplitNumber,\n    format: xAxisFormat,\n    axisName: xAxisName,\n    axisLabel: xAxisLabel,\n    axisTick: xAxisTick,\n    axisLine: xAxisLine,\n    axisSplitLine: xAxisSplitLine,\n  } = xAxis\n\n  let {\n    show: yAxisShow,\n    type: yAxisType,\n    data: yAxisData,\n    boundaryGap: yAxisBoundaryGap,\n    max: yAxisMax,\n    min: yAxisMin,\n    splitNumber: yAxisSplitNumber,\n    format: yAxisFormat,\n    axisName: yAxisName,\n    axisLabel: yAxisLabel,\n    axisTick: yAxisTick,\n    axisLine: yAxisLine,\n    axisSplitLine: yAxisSplitLine,\n  } = yAxis\n\n  let { show: xAxisNameShow, textStyle: xAxisNameTextStyle, gap: xAxisNameGap, text: xAxisNameText } = xAxisName\n  let { show: xAxisLabelShow, textStyle: xAxisLabelTextStyle, gap: xAxisLabelGap, rotate: xAxisLabelRotate, showIndex: xAxisLabelShowIndex } = xAxisLabel\n  let { show: xAxisTickShow, lineStyle: xAxisTickStyle, length: xAxisTickLength, alignWithLabel: xAxisTickAlign, showIndex: xAxisTickShowIndex } = xAxisTick\n  let { show: xAxisLineShow, lineStyle: xAxisLineStyle } = xAxisLine\n  let { show: xAxisSplitLineShow, lineStyle: xAxisSplitLineStyle, alignWithLabel: xAxisSplitLineAlign, showIndex: xAxisSplitLineShowIndex } = xAxisSplitLine\n\n  let { show: yAxisNameShow, textStyle: yAxisNameTextStyle, gap: yAxisNameGap, text: yAxisNameText } = yAxisName\n  let { show: yAxisLabelShow, textStyle: yAxisLabelTextStyle, gap: yAxisLabelGap, showIndex: yAxisLabelShowIndex } = yAxisLabel\n  let { show: yAxisTickShow, lineStyle: yAxisTickStyle, length: yAxisTickLength, alignWithLabel: yAxisTickAlign, showIndex: yAxisTickShowIndex } = yAxisTick\n  let { show: yAxisLineShow, lineStyle: yAxisLineStyle } = yAxisLine\n  let { show: yAxisSplitLineShow, lineStyle: yAxisSplitLineStyle, alignWithLabel: yAxisSplitLineAlign, showIndex: yAxisSplitLineShowIndex } = yAxisSplitLine\n\n  let { fontSize: xAxisNameFontSize } = xAxisNameTextStyle\n  let { fontSize: xAxisLabelFontSize } = xAxisLabelTextStyle\n  let { lineWidth: xAxisTickLineWidth } = xAxisTickStyle\n  let { lineWidth: xAxisLineWidth } = xAxisLineStyle\n  let { lineWidth: xAxisSplitLineWidth } = xAxisSplitLineStyle\n\n  let { fontSize: yAxisNameFontSize } = yAxisNameTextStyle\n  let { fontSize: yAxisLabelFontSize } = yAxisLabelTextStyle\n  let { lineWidth: yAxisTickLineWidth } = yAxisTickStyle\n  let { lineWidth: yAxisLineWidth } = yAxisLineStyle\n  let { lineWidth: yAxisSplitLineWidth } = yAxisSplitLineStyle\n\n  // 以x,y轴交叉点为原点\n  let xStart = padding[3] // x方向起点\n  let xEnd = width - padding[1] // x方向终点\n  let yStart = height - padding[2] - legendData.legendHeight // y方向起点\n  let yEnd = padding[0] // y方向终点\n  let xStartInit = xStart\n  let yStartInit = yStart\n\n  let yIsSamePart = true, // y轴是否同时为正数或负数，为false时同时存在正负数\n    xIsSamePart = true, // x轴是否同时为正数或负数，为false时同时存在正负数\n    yZero, // y轴零线的y坐标\n    yPlusSpacing,\n    yMinusSpacing,\n    ySpacing,\n    yEachSpacing,\n    xZero, // x轴零线的x坐标\n    xPlusSpacing,\n    xMinusSpacing,\n    xSpacing,\n    xEachSpacing,\n    yMaxData,\n    yMinData,\n    yDataRange,\n    xMaxData,\n    xMinData,\n    xDataRange\n\n  chartData.axisData = {\n    xStart: null,\n    xEnd: null,\n    yStart: null,\n    yEnd: null,\n\n    yIsSamePart: null,\n    xIsSamePart: null,\n\n    yZero: null,\n    yPlusSpacing: null,\n    yMinusSpacing: null,\n    ySpacing: null,\n    yEachSpacing: null,\n    xZero: null,\n    xPlusSpacing: null,\n    xMinusSpacing: null,\n    xSpacing: null,\n    xEachSpacing: null,\n\n    yMaxData: null,\n    yMinData: null,\n    yDataRange: null,\n    xMaxData: null,\n    xMinData: null,\n    xDataRange: null,\n\n    xAxisLabelPoint: [],\n    xAxisTickPoint: [],\n    xAxisLinePoint: {},\n    xAxisSplitLinePoint: [],\n    xAxisNamePoint: {},\n\n    yAxisLabelPoint: [],\n    yAxisTickPoint: [],\n    yAxisLinePoint: {},\n    yAxisSplitLinePoint: [],\n    yAxisNamePoint: {},\n  }\n\n  function calAxisValue(axis = 'x') {\n    let allDataArr = []\n\n    if (xAxisType == 'value' && yAxisType == 'value') {\n      allDataArr = series.reduce((allDataArr, seriesItem) => {\n        let dataArr = seriesItem.data.reduce((dataArr, dataItem) => {\n          dataArr.push(dataItem[axis])\n          return dataArr\n        }, [])\n        return allDataArr.concat(dataArr)\n      }, [])\n    } else {\n      let allDataObject = {}\n\n      JSON.parse(JSON.stringify(series)).forEach(seriesItem => {\n        if (seriesItem.stack) {\n          if (!allDataObject[seriesItem.stack]) {\n            allDataObject[seriesItem.stack] = []\n          }\n\n          allDataObject[seriesItem.stack].push(seriesItem.data)\n        } else {\n          if (!allDataObject[seriesItem.name]) {\n            allDataObject[seriesItem.name] = []\n          }\n\n          allDataObject[seriesItem.name].push(seriesItem.data)\n        }\n      })\n\n      Object.keys(allDataObject).forEach(key => {\n        if (allDataObject[key].length > 1) {\n          let stackDataArr = allDataObject[key].reduce((stackDataArr, dataArr) => {\n            if (stackDataArr.length == 0) {\n              stackDataArr = dataArr\n            } else {\n              dataArr.forEach((dataItem, dataIndex) => {\n                stackDataArr[dataIndex] += dataItem\n              })\n            }\n            return stackDataArr\n          }, [])\n          allDataArr = allDataArr.concat(stackDataArr)\n        } else {\n          let dataArr = allDataObject[key][0]\n          allDataArr = allDataArr.concat(dataArr)\n        }\n      })\n    }\n\n    let axisLabelDataArr = []\n    let splitNumber = axis == 'x' ? xAxisSplitNumber : yAxisSplitNumber\n    let max = axis == 'x' ? xAxisMax : yAxisMax\n    let min = axis == 'x' ? xAxisMin : yAxisMin\n    let maxData = Math.max(...allDataArr)\n    let minData = Math.min(...allDataArr)\n    let dataRange = 0\n    let dataEachRange = 0\n    let limit = 1\n    let multiple = 1\n    console.log(`首次获取${axis}轴数据, maxData: ${maxData}, minData: ${minData}, dataRange: ${dataRange}`, allDataArr)\n\n    max = max == 'auto' ? max : Number(max)\n    min = min == 'auto' ? min : Number(min)\n\n    // 判断是否传入max,min\n    if (max == 'auto' || min == 'auto') {\n      if (max == 'auto') {\n        maxData = maxData <= 0 && minData <= 0 ? 0 : maxData\n      } else {\n        maxData = max\n      }\n      if (min == 'auto') {\n        minData = maxData >= 0 && minData >= 0 ? 0 : minData\n      } else {\n        minData = min\n      }\n      dataRange = maxData - minData\n      console.log(`修正数据, max: ${max}, min: ${min}, maxData = ${maxData}, minData = ${minData}`)\n      console.log(`修正数据范围, dataRange = ${dataRange}`)\n    } else {\n      maxData = max\n      minData = min\n      dataRange = maxData - minData\n      console.log(`修正数据, max: ${max}, min: ${min}, maxData: ${maxData}, minData: ${minData}`)\n      console.log(`固定数据范围, dataRange = ${dataRange}`)\n    }\n\n    // 是否同时为正数或负数，为false时同时存在正负数\n    let isSamePart = maxData > 0 && minData < 0 ? false : true\n\n    if (dataRange >= 10000) {\n      limit = 1000\n      console.log(`dataRange>=10000`)\n    } else if (dataRange >= 1000) {\n      limit = 100\n      console.log(`dataRange>=1000`)\n    } else if (dataRange >= 100) {\n      limit = 10\n      console.log(`dataRange>=100`)\n    } else if (dataRange >= 10) {\n      limit = 5\n      console.log(`dataRange>=10`)\n    } else if (dataRange >= 1) {\n      limit = 0.1\n      console.log(`dataRange>=1`)\n    } else if (dataRange >= 0.1) {\n      limit = 0.01\n      console.log(`dataRange>=0.1`)\n    } else if (dataRange >= 0.01) {\n      limit = 0.001\n      console.log(`dataRange>=0.01`)\n    } else if (dataRange >= 0.001) {\n      limit = 0.0001\n      console.log(`dataRange>=0.001`)\n    } else {\n      limit = 0.00001\n      console.log(`dataRange<0.0001`)\n    }\n\n    while (limit < 1) {\n      limit *= 10\n      multiple *= 10\n      console.log(`limit<1, limit: ${limit}, multiple: ${multiple}`)\n    }\n    console.log(`limit = ${limit}, multiple = ${multiple}`)\n\n    if (max == 'auto' && min == 'auto') {\n      if (maxData >= 0 && minData >= 0) {\n        dataRange = dataRange * multiple\n        dataEachRange = Math.ceil(dataRange / splitNumber)\n        while (dataEachRange % limit !== 0) {\n          dataEachRange += 1\n        }\n        dataEachRange = dataEachRange / multiple\n        dataRange = dataEachRange * splitNumber\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        maxData = minData + dataRange\n        console.log(`同为正数且 max: auto, min: auto, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      } else if (maxData <= 0 && minData <= 0) {\n        dataRange = dataRange * multiple\n        dataEachRange = Math.floor(dataRange / splitNumber)\n        while (dataEachRange % limit !== 0) {\n          dataEachRange += 1\n        }\n        dataEachRange = dataEachRange / multiple\n        dataRange = dataEachRange * splitNumber\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        minData = maxData - dataRange\n        console.log(`同为负数且 max: auto, min: auto, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      } else {\n        dataRange = dataRange * multiple\n        dataEachRange = Math.ceil(dataRange / splitNumber)\n        while (dataEachRange % limit !== 0) {\n          dataEachRange += 1\n        }\n        dataEachRange = dataEachRange / multiple\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n\n        axisLabelDataArr.push(0)\n\n        let data = 0\n        while (data < maxData) {\n          data += dataEachRange\n          axisLabelDataArr.push(data)\n        }\n        maxData = data\n\n        data = 0\n        while (data > minData) {\n          data -= dataEachRange\n          axisLabelDataArr.unshift(data)\n        }\n        minData = data\n        dataRange = maxData - minData\n        console.log(`修正数据, maxData = ${maxData}, minData = ${minData}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        console.log(`正负数且 max: auto, min: auto, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      }\n    }\n\n    if (max == 'auto' && typeof min == 'number') {\n      if (maxData >= 0 && minData >= 0) {\n        dataRange = dataRange * multiple\n        dataEachRange = Math.ceil(dataRange / splitNumber)\n        while (dataEachRange % limit !== 0) {\n          dataEachRange += 1\n        }\n        dataEachRange = dataEachRange / multiple\n        dataRange = dataEachRange * splitNumber\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        maxData = minData + dataRange\n        console.log(`同为正数且 max: auto, min: ${min}, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      } else if (maxData <= 0 && minData <= 0) {\n        dataRange = dataRange * multiple\n        dataEachRange = Number((dataRange / splitNumber).toFixed(2))\n        dataEachRange = dataEachRange / multiple\n        dataRange = dataEachRange * splitNumber\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        console.log(`同为负数且 max: auto, min: ${min}, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      } else {\n        dataRange = dataRange * multiple\n        dataEachRange = Math.ceil(dataRange / splitNumber)\n        while (dataEachRange % limit !== 0) {\n          dataEachRange += 1\n        }\n        dataEachRange = dataEachRange / multiple\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n\n        axisLabelDataArr.push(0)\n\n        let data = 0\n        while (data < maxData) {\n          data += dataEachRange\n          axisLabelDataArr.push(data)\n        }\n        maxData = data\n\n        data = 0\n        while (data - dataEachRange > minData) {\n          data -= dataEachRange\n          axisLabelDataArr.unshift(data)\n        }\n        axisLabelDataArr.unshift(minData)\n\n        dataRange = maxData - minData\n        console.log(`修正数据, maxData = ${maxData}, minData = ${minData}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        console.log(`正负数且 max: auto, min: ${min}, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      }\n    }\n\n    if (typeof max == 'number' && min == 'auto') {\n      console.log(`max: ${max}, min: auto`)\n\n      if (maxData >= 0 && minData >= 0) {\n        dataRange = dataRange * multiple\n        dataEachRange = Number((dataRange / splitNumber).toFixed(2))\n        dataEachRange = dataEachRange / multiple\n        dataRange = dataEachRange * splitNumber\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        console.log(`同为正数且 max: ${max}, min: auto, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      } else if (maxData <= 0 && minData <= 0) {\n        dataRange = dataRange * multiple\n        dataEachRange = Math.floor(dataRange / splitNumber)\n        while (dataEachRange % limit !== 0) {\n          dataEachRange += 1\n        }\n        dataEachRange = dataEachRange / multiple\n        dataRange = dataEachRange * splitNumber\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        minData = maxData - dataRange\n        console.log(`同为负数且 max: ${max}, min: auto, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      } else {\n        dataRange = dataRange * multiple\n        dataEachRange = Math.ceil(dataRange / splitNumber)\n        while (dataEachRange % limit !== 0) {\n          dataEachRange += 1\n        }\n        dataEachRange = dataEachRange / multiple\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n\n        axisLabelDataArr.push(0)\n\n        let data = 0\n        while (data + dataEachRange < maxData) {\n          data += dataEachRange\n          axisLabelDataArr.push(data)\n        }\n        axisLabelDataArr.push(maxData)\n\n        data = 0\n        while (data > minData) {\n          data -= dataEachRange\n          axisLabelDataArr.unshift(data)\n        }\n        minData = data\n\n        dataRange = maxData - minData\n        console.log(`修正数据, maxData = ${maxData}, minData = ${minData}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        console.log(`正负数且 max: ${max}, min: auto, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      }\n    }\n\n    if (typeof max == 'number' && typeof min == 'number') {\n      console.log(`max: ${max}, min: ${min}`)\n\n      if (maxData >= 0 && minData >= 0) {\n        dataEachRange = Number((dataRange / splitNumber).toFixed(2))\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n        console.log(`同为正数且 max: ${max}, min: ${min}, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      } else if (maxData <= 0 && minData <= 0) {\n        dataEachRange = Number((dataRange / splitNumber).toFixed(2))\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n        console.log(`同为负数且 max: ${max}, min: ${min}, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      } else {\n        dataRange = dataRange * multiple\n        dataEachRange = Math.ceil(dataRange / splitNumber)\n\n        while (dataEachRange % limit !== 0) {\n          dataEachRange += 1\n        }\n        dataEachRange = dataEachRange / multiple\n        console.log(`修正数据间隔, dataEachRange = ${dataEachRange}, splitNumber = ${splitNumber}`)\n\n        axisLabelDataArr.push(0)\n\n        let data = 0\n        while (data + dataEachRange < maxData) {\n          data += dataEachRange\n          axisLabelDataArr.push(data)\n        }\n        axisLabelDataArr.push(maxData)\n\n        data = 0\n        while (data - dataEachRange > minData) {\n          data -= dataEachRange\n          axisLabelDataArr.unshift(data)\n        }\n        axisLabelDataArr.unshift(minData)\n\n        dataRange = maxData - minData\n        console.log(`修正数据, maxData = ${maxData}, minData = ${minData}`)\n        console.log(`修正数据范围, dataRange = ${dataRange}`)\n        console.log(`正负数且 max: ${max}, min: ${min}, dataRange = ${dataRange}, dataEachRange = ${dataEachRange}, maxData: ${maxData}, minData: ${minData}`)\n      }\n    }\n\n    if (isSamePart) {\n      for (let i = 0; i <= splitNumber; i++) {\n        let data = minData + dataEachRange * i\n        data = data.toFixed(multiple.toString().length - 1)\n        axisLabelDataArr.push(Number(data))\n      }\n    }\n\n    if (axis == 'x') {\n      xDataRange = dataRange\n      xMaxData = maxData\n      xMinData = minData\n      xIsSamePart = isSamePart\n    } else {\n      yDataRange = dataRange\n      yMaxData = maxData\n      yMinData = minData\n      yIsSamePart = isSamePart\n    }\n\n    console.log(`complete calAxisValue ${axis}`, axisLabelDataArr)\n\n    return axisLabelDataArr\n  }\n\n  // 计算xAxisLabelDataArr, yAxisLabelDataArr\n  let xAxisLabelDataArr = xAxisType == 'category' ? xAxisData : calAxisValue('x')\n  let yAxisLabelDataArr = yAxisType == 'category' ? yAxisData : calAxisValue('y')\n\n  // 计算 xAxisLabelTextArr, xAxisLabelMaxHeight\n  context.font = `${xAxisLabelFontSize}px`\n  let xAxisLabelMaxWidth = 0\n  let xAxisLabelMaxHeight = 0\n  let xAxisLabelTextArr = xAxisLabelDataArr.reduce((xAxisLabelTextArr, dataItem, dataIndex) => {\n    let text = xAxisFormat ? xAxisFormat(dataItem) : dataItem\n    xAxisLabelMaxWidth = Math.max(context.measureText(text).width, xAxisLabelMaxWidth)\n    xAxisLabelTextArr.push(text)\n    return xAxisLabelTextArr\n  }, [])\n\n  xAxisLabelRotate = Number(xAxisLabelRotate)\n\n  if (xAxisLabelRotate == 0) {\n    xAxisLabelMaxHeight = xAxisLabelFontSize\n  } else {\n    xAxisLabelMaxHeight =\n      Math.abs(xAxisLabelMaxWidth * Math.sin((xAxisLabelRotate * Math.PI) / 180)) + Math.abs(xAxisLabelFontSize * Math.cos((xAxisLabelRotate * Math.PI) / 180))\n  }\n\n  // 计算yAxisLabelTextArr, yAxisLabelMaxWidth\n  context.font = `${yAxisLabelFontSize}px`\n  let yAxisLabelMaxWidth = 0\n  let yAxisLabelTextArr = yAxisLabelDataArr.reduce((yAxisLabelTextArr, dataItem, dataIndex) => {\n    let text = yAxisFormat ? yAxisFormat(dataItem) : dataItem\n    yAxisLabelMaxWidth = Math.max(context.measureText(text).width, xAxisLabelMaxWidth)\n    yAxisLabelTextArr.push(text)\n    return yAxisLabelTextArr\n  }, [])\n\n  let xSpacingNumber = 0\n  if (xAxisType == 'category') {\n    xSpacingNumber = xAxisBoundaryGap ? xAxisLabelDataArr.length : xAxisLabelDataArr.length - 1\n  } else {\n    xSpacingNumber = xAxisLabelDataArr.length - 1\n  }\n\n  let ySpacingNumber = 0\n  if (yAxisType == 'category') {\n    ySpacingNumber = yAxisBoundaryGap ? yAxisLabelDataArr.length : yAxisLabelDataArr.length - 1\n  } else {\n    ySpacingNumber = yAxisLabelDataArr.length - 1\n  }\n\n  // 修正yStart\n  if (xAxisShow && xAxisLabelShow) {\n    yStart -= xAxisLabelMaxHeight + xAxisLabelGap\n  }\n  if (xAxisShow && xAxisTickShow) {\n    if ((yAxisType == 'value' && yIsSamePart) || yAxisType == 'category') {\n      yStart -= xAxisTickLength\n    }\n  }\n  if (yIsSamePart) {\n    if (xAxisShow && xAxisLineShow) {\n      yStart -= xAxisLineWidth / 2\n    }\n  } else {\n    if (xAxisShow && xAxisSplitLineShow) {\n      yStart -= xAxisSplitLineWidth / 2\n    }\n  }\n\n  // 修正yEnd\n  if (yAxisShow && yAxisNameShow) {\n    yEnd += yAxisNameFontSize + yAxisNameGap\n  }\n  ySpacing = yStart - yEnd\n  console.log(`初始ySpacing数据, yStart = ${yStart}, yEnd = ${yEnd}, ySpacing = ${ySpacing}`)\n  yEachSpacing = Math.floor(ySpacing / ySpacingNumber)\n  yEnd = yStart - yEachSpacing * ySpacingNumber\n  ySpacing = yStart - yEnd\n  console.log(`修正ySpacing数据, yStart = ${yStart}, yEnd = ${yEnd}, ySpacing = ${ySpacing}`)\n\n  // 修正xStart\n  if (yAxisLabelShow) {\n    xStart += yAxisLabelMaxWidth + yAxisLabelGap\n  }\n  if (yAxisShow && yAxisTickShow) {\n    if ((xAxisType == 'value' && xIsSamePart) || xAxisType == 'category') {\n      xStart += yAxisTickLength\n    }\n  }\n  if (xIsSamePart) {\n    if (yAxisShow && yAxisLineShow) {\n      xStart += yAxisLineWidth / 2\n    }\n  } else {\n    if (yAxisShow && yAxisSplitLineShow) {\n      xStart += yAxisSplitLineWidth / 2\n    }\n  }\n\n  // 修正xEnd\n  if (xAxisShow && xAxisNameShow) {\n    context.font = `${xAxisNameFontSize}px`\n    let xAxisNameTextWidth = context.measureText(xAxisNameText).width\n    xEnd -= xAxisNameTextWidth + xAxisNameGap\n  }\n  xSpacing = xEnd - xStart\n  console.log(`初始xSpacing数据, xStart = ${xStart}, xEnd = ${xEnd}, xSpacing = ${xSpacing}`)\n  xEachSpacing = Math.floor(xSpacing / xSpacingNumber)\n  xEnd = xStart + xEachSpacing * xSpacingNumber\n  xSpacing = xEnd - xStart\n  console.log(`修正xSpacing数据, xStart = ${xStart}, xEnd = ${xEnd}, xSpacing = ${xSpacing}`)\n\n  // 计算yZero\n  if (yAxisType == 'value' && !yIsSamePart) {\n    yAxisLabelDataArr.reduce((arr, item, index) => {\n      if (index == 0) {\n        arr.push({\n          y: yStart,\n        })\n      } else {\n        let spacing = (Math.abs(yAxisLabelDataArr[index - 1] - yAxisLabelDataArr[index]) * ySpacing) / yDataRange\n\n        arr.push({\n          y: arr[index - 1].y - spacing,\n        })\n      }\n\n      if (item == 0) {\n        yZero = arr[index].y // 存在正负值时计算0线的y坐标\n        console.log(`yZero = ${yZero}`)\n      }\n\n      if (index + 1 == yAxisLabelDataArr.length) {\n        yEnd = arr[index].y\n        ySpacing = yStart - yEnd\n        console.log(`修正yEnd, yEnd = ${yEnd}`)\n        console.log(`修正ySpacing, ySpacing = ${ySpacing}`)\n        yPlusSpacing = yZero - yEnd\n        yMinusSpacing = yStart - yZero\n      }\n\n      return arr\n    }, [])\n  }\n\n  // 计算xZero\n  if (xAxisType == 'value' && !xIsSamePart) {\n    xAxisLabelDataArr.reduce((arr, item, index) => {\n      if (index == 0) {\n        arr.push({\n          x: xStart,\n        })\n      } else {\n        let spacing = (Math.abs(xAxisLabelDataArr[index] - xAxisLabelDataArr[index - 1]) * xSpacing) / xDataRange\n        arr.push({\n          x: arr[index - 1].x + spacing,\n        })\n      }\n\n      if (item == 0) {\n        xZero = arr[index].x // 存在正负值时计算0线的x坐标\n        console.log(`xZero = ${xZero}`)\n      }\n\n      if (index + 1 == xAxisLabelDataArr.length) {\n        xEnd = arr[index].x\n        xSpacing = xEnd - xStart\n        console.log(`修正xEnd, xEnd = ${xEnd}`)\n        console.log(`修正xSpacing, xSpacing = ${xSpacing}`)\n        xPlusSpacing = xEnd - xZero\n        xMinusSpacing = xZero - xStart\n      }\n\n      return arr\n    }, [])\n  }\n\n  // 计算 yAxis 各项数据\n  if (yAxisType == 'value') {\n    let _xStart = xStartInit\n    if (yAxisShow && yAxisLabelShow) {\n      _xStart += yAxisLabelMaxWidth // 更新_xStart数据\n    }\n\n    // 计算 yAxisLabelPoint\n    chartData.axisData.yAxisLabelPoint = yAxisLabelTextArr.reduce((yAxisLabelPoint, item, index) => {\n      if (index == 0) {\n        yAxisLabelPoint.push({\n          text: item,\n          x: _xStart,\n          y: yStart,\n        })\n      } else {\n        let spacing = (Math.abs(yAxisLabelDataArr[index - 1] - yAxisLabelDataArr[index]) * ySpacing) / yDataRange\n\n        yAxisLabelPoint.push({\n          text: item,\n          x: _xStart,\n          y: yAxisLabelPoint[index - 1].y - spacing,\n        })\n      }\n\n      return yAxisLabelPoint\n    }, [])\n\n    // 计算 yAxisSplitLinePoint\n    if (yAxisShow && yAxisSplitLineShow) {\n      let _xStart = xStartInit\n      if (yAxisShow && yAxisLabelShow) {\n        _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n      }\n      if (yAxisShow && yAxisTickShow) {\n        if (xIsSamePart) {\n          _xStart += yAxisTickLength // 更新_xStart数据\n        }\n      }\n\n      chartData.axisData.yAxisSplitLinePoint = chartData.axisData.yAxisLabelPoint.reduce((yAxisSplitLinePoint, item, index) => {\n        yAxisSplitLinePoint.push({\n          startX: _xStart, // 起点x坐标\n          startY: item.y, // 起点y坐标\n          endX: xEnd, // 终点x坐标\n          endY: item.y, // 终点y坐标\n        })\n        return yAxisSplitLinePoint\n      }, [])\n    }\n\n    // 计算 yAxisTickPoint\n    if (yAxisShow && yAxisTickShow) {\n      let _xStart = xStartInit\n\n      if (xIsSamePart) {\n        if (yAxisShow && yAxisLabelShow) {\n          _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n        }\n      } else {\n        _xStart = xZero - xAxisLineWidth / 2 - yAxisTickLength\n      }\n\n      chartData.axisData.yAxisTickPoint = chartData.axisData.yAxisLabelPoint.reduce((yAxisTickPoint, item, index) => {\n        yAxisTickPoint.push({\n          startX: _xStart, // 起点x坐标\n          startY: item.y, // 起点y坐标\n          endX: _xStart + yAxisTickLength, // 终点x坐标\n          endY: item.y, // 终点y坐标\n        })\n        return yAxisTickPoint\n      }, [])\n    }\n\n    // 计算 yAxisLinePoint\n    if (yAxisShow && yAxisLineShow) {\n      let _xStart = xStartInit\n      if (xIsSamePart) {\n        if (yAxisShow && yAxisLabelShow) {\n          _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n        }\n        if (yAxisShow && yAxisTickShow) {\n          _xStart += yAxisTickLength // 更新_xStart数据\n        }\n        _xStart += yAxisLineWidth / 2\n      } else {\n        _xStart = xZero\n      }\n\n      chartData.axisData.yAxisLinePoint = {\n        startX: _xStart, // 起点x坐标\n        startY: yStart, // 起点y坐标\n        endX: _xStart, // 终点x坐标\n        endY: yEnd - yAxisTickLineWidth / 2, // 终点y坐标\n      }\n    }\n\n    // 计算 yAxisNamePoint\n    if (yAxisShow && yAxisNameShow) {\n      let _xStart = xStartInit\n      if (xIsSamePart) {\n        if (yAxisShow && yAxisLabelShow) {\n          _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n        }\n        if (yAxisShow && yAxisTickShow) {\n          _xStart += yAxisTickLength // 更新_xStart数据\n        }\n        if (yAxisShow && yAxisLineShow) {\n          _xStart += yAxisLineWidth / 2 // 更新_xStart数据\n        }\n      } else {\n        _xStart = xZero\n      }\n\n      chartData.axisData.yAxisNamePoint = {\n        text: yAxisNameText,\n        x: _xStart,\n        y: yEnd - yAxisNameGap,\n      }\n    }\n  }\n\n  // 计算 xAxis 各项数据\n  if (xAxisType == 'value') {\n    let _yStart = yStartInit\n    if (xAxisShow && xAxisLabelShow) {\n      _yStart -= xAxisLabelMaxHeight // 更新_yStart数据\n    }\n\n    // 计算 xAxisLabelPoint\n    chartData.axisData.xAxisLabelPoint = xAxisLabelTextArr.reduce((xAxisLabelPoint, item, index) => {\n      if (index == 0) {\n        xAxisLabelPoint.push({\n          text: item,\n          x: xStart,\n          y: _yStart,\n        })\n      } else {\n        let spacing = (Math.abs(xAxisLabelDataArr[index] - xAxisLabelDataArr[index - 1]) * xSpacing) / xDataRange\n\n        xAxisLabelPoint.push({\n          text: item,\n          x: xAxisLabelPoint[index - 1].x + spacing,\n          y: _yStart,\n        })\n      }\n\n      return xAxisLabelPoint\n    }, [])\n\n    // 计算 xAxisSplitLinePoint\n    if (xAxisShow && xAxisSplitLineShow) {\n      let _yStart = yStartInit\n      if (xAxisShow && xAxisLabelShow) {\n        _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新_yStart数据\n      }\n      if (xAxisShow && xAxisTickShow) {\n        if (yIsSamePart) {\n          _yStart -= xAxisTickLength // 更新_yStart数据\n        }\n      }\n\n      chartData.axisData.xAxisSplitLinePoint = chartData.axisData.xAxisLabelPoint.reduce((xAxisSplitLinePoint, item, index) => {\n        xAxisSplitLinePoint.push({\n          startX: item.x, // 起点x坐标\n          startY: _yStart, // 起点y坐标\n          endX: item.x, // 终点x坐标\n          endY: yEnd, // 终点y坐标\n        })\n        return xAxisSplitLinePoint\n      }, [])\n    }\n\n    // 计算 xAxisTickPoint\n    if (xAxisShow && xAxisTickShow) {\n      let _yStart = yStartInit\n      if (yIsSamePart) {\n        if (yAxisShow && yAxisLabelShow) {\n          _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新_yStart数据\n        }\n      } else {\n        _yStart = yZero + xAxisLineWidth / 2 + yAxisTickLength\n      }\n\n      chartData.axisData.xAxisTickPoint = chartData.axisData.xAxisLabelPoint.reduce((xAxisTickPoint, item, index) => {\n        xAxisTickPoint.push({\n          startX: item.x, // 起点x坐标\n          startY: _yStart, // 起点y坐标\n          endX: item.x, // 终点x坐标\n          endY: _yStart - xAxisTickLength, // 终点y坐标\n        })\n        return xAxisTickPoint\n      }, [])\n    }\n\n    // 计算 xAxisLinePoint\n    if (xAxisShow && xAxisLineShow) {\n      let _yStart = yStartInit\n      if (yIsSamePart) {\n        if (xAxisShow && xAxisLabelShow) {\n          _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新_yStart数据\n        }\n        if (xAxisShow && xAxisTickShow) {\n          _yStart -= xAxisTickLength // 更新_yStart数据\n        }\n        _yStart -= xAxisLineWidth / 2\n      } else {\n        _yStart = yZero\n      }\n\n      chartData.axisData.xAxisLinePoint = {\n        startX: xStart, // 起点x坐标\n        startY: _yStart, // 起点y坐标\n        endX: xEnd + xAxisTickLineWidth / 2, // 终点x坐标\n        endY: _yStart, // 终点y坐标\n      }\n    }\n\n    // 计算 xAxisNamePoint\n    if (xAxisShow && xAxisNameShow) {\n      let _yStart = yStartInit\n      if (xIsSamePart) {\n        if (xAxisShow && xAxisLabelShow) {\n          _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新_yStart数据\n        }\n        if (xAxisShow && xAxisTickShow) {\n          _yStart -= xAxisTickLength // 更新_yStart数据\n        }\n        if (xAxisShow && xAxisLineShow) {\n          _yStart -= xAxisLineWidth / 2 // 更新_yStart数据\n        }\n      } else {\n        _yStart = yZero\n      }\n\n      chartData.axisData.xAxisNamePoint = {\n        text: xAxisNameText,\n        x: xEnd + xAxisNameGap,\n        y: _yStart,\n      }\n    }\n  }\n\n  // 计算 yAxis 各项数据\n  if (yAxisType == 'category') {\n    // 计算 yAxisLabelPoint\n    chartData.axisData.yAxisLabelPoint = yAxisLabelTextArr.reduce((yAxisLabelPoint, item, index) => {\n      let _xStart = xStartInit\n      if (yAxisShow && yAxisLabelShow) {\n        _xStart += yAxisLabelMaxWidth // 更新_xStart数据\n      }\n\n      if (yAxisBoundaryGap) {\n        yAxisLabelPoint.push({\n          show: true,\n          text: item,\n          x: _xStart,\n          y: yStart - yEachSpacing * (index + 1) + yEachSpacing / 2,\n        })\n      } else {\n        yAxisLabelPoint.push({\n          show: true,\n          text: item,\n          x: _xStart,\n          y: yStart - yEachSpacing * index,\n        })\n      }\n\n      return yAxisLabelPoint\n    }, [])\n\n    if (yAxisLabelShowIndex && yAxisLabelShowIndex.length) {\n      chartData.axisData.yAxisLabelPoint = chartData.axisData.yAxisLabelPoint.map((item, index) => {\n        let isShow = yAxisLabelShowIndex.some(showIndex => {\n          return showIndex === index\n        })\n\n        if (isShow) {\n          item.show = true\n        } else {\n          item.show = false\n        }\n\n        return item\n      })\n    }\n\n    // 计算 yAxisSplitLinePoint\n    if (yAxisShow && yAxisSplitLineShow) {\n      let _xStart = xStartInit\n      if (yAxisShow && yAxisLabelShow) {\n        _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n      }\n      if (yAxisShow && yAxisTickShow) {\n        if (xIsSamePart) {\n          _xStart += yAxisTickLength // 更新_xStart数据\n        }\n      }\n\n      // yAxisSplitLineAlign为true时，刻度线与标签对齐\n      let yAxisSplitLineNumber = 0\n      if (yAxisBoundaryGap) {\n        yAxisSplitLineNumber = yAxisSplitLineAlign ? yAxisLabelDataArr.length : yAxisLabelDataArr.length + 1\n      } else {\n        yAxisSplitLineNumber = yAxisLabelDataArr.length\n      }\n\n      for (let index = 0; index < yAxisSplitLineNumber; index++) {\n        if (yAxisBoundaryGap && yAxisSplitLineAlign) {\n          chartData.axisData.yAxisSplitLinePoint.push({\n            show: true,\n            startX: _xStart,\n            startY: yStart - yEachSpacing * index - yEachSpacing / 2,\n            endX: xEnd,\n            endY: yStart - yEachSpacing * index - yEachSpacing / 2,\n          })\n        } else {\n          chartData.axisData.yAxisSplitLinePoint.push({\n            show: true,\n            startX: _xStart,\n            startY: yStart - yEachSpacing * index,\n            endX: xEnd,\n            endY: yStart - yEachSpacing * index,\n          })\n        }\n      }\n    }\n\n    if (yAxisSplitLineShowIndex && yAxisSplitLineShowIndex.length) {\n      chartData.axisData.yAxisSplitLinePoint = chartData.axisData.yAxisSplitLinePoint.map((item, index) => {\n        let isShow = yAxisSplitLineShowIndex.some(showIndex => {\n          return showIndex === index\n        })\n\n        if (isShow) {\n          item.show = true\n        } else {\n          item.show = false\n        }\n\n        return item\n      })\n    }\n\n    // 计算 yAxisTickPoint\n    if (yAxisShow && yAxisTickShow) {\n      let _xStart = xStartInit\n\n      if (xIsSamePart) {\n        if (yAxisShow && yAxisLabelShow) {\n          _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n        }\n      } else {\n        _xStart = xZero - yAxisLineWidth / 2 - yAxisTickLength\n      }\n\n      // yAxisTickAlign为true时，刻度线与标签对齐\n      let yAxisTickNumber = 0\n      if (yAxisBoundaryGap) {\n        yAxisTickNumber = yAxisTickAlign ? yAxisLabelDataArr.length : yAxisLabelDataArr.length + 1\n      } else {\n        yAxisTickNumber = yAxisLabelDataArr.length\n      }\n\n      for (let index = 0; index < yAxisTickNumber; index++) {\n        if (yAxisBoundaryGap && yAxisTickAlign) {\n          chartData.axisData.yAxisTickPoint.push({\n            show: true,\n            startX: _xStart,\n            startY: yStart - yEachSpacing * index - yEachSpacing / 2,\n            endX: _xStart + yAxisTickLength,\n            endY: yStart - yEachSpacing * index - yEachSpacing / 2,\n          })\n        } else {\n          chartData.axisData.yAxisTickPoint.push({\n            show: true,\n            startX: _xStart,\n            startY: yStart - yEachSpacing * index,\n            endX: _xStart + yAxisTickLength,\n            endY: yStart - yEachSpacing * index,\n          })\n        }\n      }\n    }\n\n    if (yAxisTickShowIndex && yAxisTickShowIndex.length) {\n      chartData.axisData.yAxisTickPoint = chartData.axisData.yAxisTickPoint.map((item, index) => {\n        let isShow = yAxisTickShowIndex.some(showIndex => {\n          return showIndex === index\n        })\n\n        if (isShow) {\n          item.show = true\n        } else {\n          item.show = false\n        }\n\n        return item\n      })\n    }\n\n    // 计算 yAxisLinePoint\n    if (yAxisShow && yAxisLineShow) {\n      let _xStart = xStartInit\n      if (xIsSamePart) {\n        if (yAxisShow && yAxisLabelShow) {\n          _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n        }\n        if (yAxisShow && yAxisTickShow) {\n          _xStart += yAxisTickLength // 更新_xStart数据\n        }\n        _xStart += yAxisLineWidth / 2\n      } else {\n        _xStart = xZero\n      }\n\n      chartData.axisData.yAxisLinePoint = {\n        startX: _xStart,\n        startY: yStart,\n        endX: _xStart,\n        endY: yEnd - yAxisTickLineWidth / 2,\n      }\n    }\n\n    // 计算 yAxisNamePoint\n    if (yAxisShow && yAxisNameShow) {\n      let _xStart = xStartInit\n      if (xIsSamePart) {\n        if (yAxisShow && yAxisLabelShow) {\n          _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n        }\n        if (yAxisShow && yAxisTickShow) {\n          _xStart += yAxisTickLength // 更新_xStart数据\n        }\n        if (yAxisShow && yAxisLineShow) {\n          _xStart += yAxisLineWidth / 2 // 更新_xStart数据\n        }\n      } else {\n        _xStart = xZero\n      }\n\n      chartData.axisData.yAxisNamePoint = {\n        text: yAxisNameText,\n        x: _xStart,\n        y: yEnd - yAxisNameGap,\n      }\n    }\n  }\n\n  // 计算 xAxis 各项数据\n  if (xAxisType == 'category') {\n    // 计算 xAxisLabelPoint\n    chartData.axisData.xAxisLabelPoint = xAxisLabelTextArr.reduce((xAxisLabelPoint, item, index) => {\n      let _yStart = yStartInit\n      if (xAxisShow && xAxisLabelShow) {\n        _yStart -= xAxisLabelMaxHeight // 更新_yStart数据\n      }\n\n      if (xAxisBoundaryGap) {\n        xAxisLabelPoint.push({\n          show: true,\n          text: item,\n          x: xStart + xEachSpacing * (index + 1) - xEachSpacing / 2,\n          y: _yStart,\n        })\n      } else {\n        xAxisLabelPoint.push({\n          show: true,\n          text: item,\n          x: xStart + xEachSpacing * index,\n          y: _yStart,\n        })\n      }\n      return xAxisLabelPoint\n    }, [])\n\n    if (xAxisLabelShowIndex && xAxisLabelShowIndex.length) {\n      chartData.axisData.xAxisLabelPoint = chartData.axisData.xAxisLabelPoint.map((item, index) => {\n        let isShow = xAxisLabelShowIndex.some(showIndex => {\n          return showIndex === index\n        })\n\n        if (isShow) {\n          item.show = true\n        } else {\n          item.show = false\n        }\n\n        return item\n      })\n    }\n\n    // 计算 xAxisSplitLinePoint\n    if (xAxisShow && xAxisSplitLineShow) {\n      let _yStart = yStartInit\n      if (xAxisShow && xAxisLabelShow) {\n        _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新_yStart数据\n      }\n      if (xAxisShow && xAxisTickShow) {\n        if (yIsSamePart) {\n          _yStart -= xAxisTickLength // 更新_yStart数据\n        }\n      }\n\n      // xAxisSplitLineAlign为true时，网格线与标签对齐\n      let xAxisSplitLineNumber = 0\n      if (xAxisBoundaryGap) {\n        xAxisSplitLineNumber = xAxisSplitLineAlign ? xAxisLabelDataArr.length : xAxisLabelDataArr.length + 1\n      } else {\n        xAxisSplitLineNumber = xAxisLabelDataArr.length\n      }\n\n      for (let index = 0; index < xAxisSplitLineNumber; index++) {\n        if (xAxisBoundaryGap && xAxisSplitLineAlign) {\n          chartData.axisData.xAxisSplitLinePoint.push({\n            show: true,\n            startX: xStart + xEachSpacing * index + xEachSpacing / 2,\n            startY: _yStart,\n            endX: xStart + xEachSpacing * index + xEachSpacing / 2,\n            endY: yEnd,\n          })\n        } else {\n          chartData.axisData.xAxisSplitLinePoint.push({\n            show: true,\n            startX: xStart + xEachSpacing * index,\n            startY: _yStart,\n            endX: xStart + xEachSpacing * index,\n            endY: yEnd,\n          })\n        }\n      }\n    }\n\n    if (xAxisSplitLineShowIndex && xAxisSplitLineShowIndex.length) {\n      chartData.axisData.xAxisSplitLinePoint = chartData.axisData.xAxisSplitLinePoint.map((item, index) => {\n        let isShow = xAxisSplitLineShowIndex.some(showIndex => {\n          return showIndex === index\n        })\n\n        if (isShow) {\n          item.show = true\n        } else {\n          item.show = false\n        }\n\n        return item\n      })\n    }\n\n    // 计算 xAxisTickPoint\n    if (xAxisShow && xAxisTickShow) {\n      let _yStart = yStartInit\n\n      if (yIsSamePart) {\n        if (xAxisShow && xAxisLabelShow) {\n          _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新_yStart数据\n        }\n        if (xAxisShow && xAxisTickShow) {\n          _yStart -= xAxisTickLength // 更新_yStart数据\n        }\n      } else {\n        _yStart = yZero - xAxisLineWidth / 2\n      }\n\n      // xAxisTickAlign为true时，刻度线与标签对齐\n      let xAxisTickNumber = 0\n      if (xAxisBoundaryGap) {\n        xAxisTickNumber = xAxisTickAlign ? xAxisLabelDataArr.length : xAxisLabelDataArr.length + 1\n      } else {\n        xAxisTickNumber = xAxisLabelDataArr.length\n      }\n\n      for (let index = 0; index < xAxisTickNumber; index++) {\n        if (xAxisBoundaryGap && xAxisTickAlign) {\n          chartData.axisData.xAxisTickPoint.push({\n            show: true,\n            startX: xStart + xEachSpacing * index + xEachSpacing / 2,\n            startY: _yStart,\n            endX: xStart + xEachSpacing * index + xEachSpacing / 2,\n            endY: _yStart + xAxisTickLength,\n          })\n        } else {\n          chartData.axisData.xAxisTickPoint.push({\n            show: true,\n            startX: xStart + xEachSpacing * index,\n            startY: _yStart,\n            endX: xStart + xEachSpacing * index,\n            endY: _yStart + xAxisTickLength,\n          })\n        }\n      }\n    }\n\n    if (xAxisTickShowIndex && xAxisTickShowIndex.length) {\n      chartData.axisData.xAxisTickPoint = chartData.axisData.xAxisTickPoint.map((item, index) => {\n        let isShow = xAxisTickShowIndex.some(showIndex => {\n          return showIndex === index\n        })\n\n        if (isShow) {\n          item.show = true\n        } else {\n          item.show = false\n        }\n\n        return item\n      })\n    }\n\n    // 计算 xAxisLinePoint\n    if (xAxisShow && xAxisLineShow) {\n      let _yStart = yStartInit\n      if (yIsSamePart) {\n        if (xAxisShow && xAxisLabelShow) {\n          _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新_yStart数据\n        }\n        if (xAxisShow && xAxisTickShow) {\n          _yStart -= xAxisTickLength // 更新_yStart数据\n        }\n        _yStart -= xAxisLineWidth / 2\n      } else {\n        _yStart = yZero\n      }\n\n      chartData.axisData.xAxisLinePoint = {\n        startX: xStart,\n        startY: _yStart,\n        endX: xEnd + xAxisTickLineWidth / 2,\n        endY: _yStart,\n      }\n    }\n\n    // 计算 xAxisNamePoint\n    if (xAxisShow && xAxisNameShow) {\n      let _yStart = yStartInit\n      if (yIsSamePart) {\n        if (xAxisShow && xAxisLabelShow) {\n          _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新_yStart数据\n        }\n        if (xAxisShow && xAxisTickShow) {\n          _yStart -= xAxisTickLength // 更新_yStart数据\n        }\n        if (xAxisShow && xAxisLineShow) {\n          _yStart -= xAxisLineWidth / 2 // 更新_yStart数据\n        }\n      } else {\n        _yStart = yZero\n      }\n\n      chartData.axisData.xAxisNamePoint = {\n        text: xAxisNameText,\n        x: xEnd + xAxisNameGap,\n        y: _yStart,\n      }\n    }\n  }\n\n  chartData.axisData.xStart = xStart\n  chartData.axisData.xEnd = xEnd\n  chartData.axisData.yStart = yStart\n  chartData.axisData.yEnd = yEnd\n\n  chartData.axisData.yIsSamePart = yIsSamePart\n  chartData.axisData.xIsSamePart = xIsSamePart\n\n  chartData.axisData.yZero = yZero\n  chartData.axisData.yPlusSpacing = yPlusSpacing\n  chartData.axisData.yMinusSpacing = yMinusSpacing\n  chartData.axisData.ySpacing = ySpacing\n  chartData.axisData.yEachSpacing = yEachSpacing\n  chartData.axisData.xZero = xZero\n  chartData.axisData.xPlusSpacing = xPlusSpacing\n  chartData.axisData.xMinusSpacing = xMinusSpacing\n  chartData.axisData.xSpacing = xSpacing\n  chartData.axisData.xEachSpacing = xEachSpacing\n\n  chartData.axisData.yMaxData = yMaxData\n  chartData.axisData.yMinData = yMinData\n  chartData.axisData.yDataRange = yDataRange\n  chartData.axisData.xMaxData = xMaxData\n  chartData.axisData.xMinData = xMinData\n  chartData.axisData.xDataRange = xDataRange\n\n  console.log('complete calAxisData', this.chartData.axisData)\n}\n","import { percentToNum, convertCoordinateOrigin } from '../util/util'\n\nexport default function calAxisRadarData() {\n  let { context, opts, legendData, chartData } = this\n  let { width, height, padding, radarAxis, categories } = opts\n  let { center, radius, splitNumber, axisName: radarAxisName } = JSON.parse(JSON.stringify(radarAxis))\n  let { show: radarAxisNameShow, textStyle: radarAxisNameTextStyle } = radarAxisName\n  let { fontSize: radarAxisNameFontSize, margin: radarAxisNameMargin } = radarAxisNameTextStyle\n  let [centerX, centerY] = center\n  chartData.radarAxis = {\n    center: [],\n    radius: 0,\n    lineEndPosition: [],\n    namePosition: [],\n  }\n\n  if (typeof centerX == 'string') {\n    centerX = width * percentToNum(centerX)\n  }\n  if (typeof centerY == 'string') {\n    centerY = (height - legendData.legendHeight - padding[2]) * percentToNum(centerY)\n  }\n  if (typeof radius == 'string') {\n    radius = ((height - legendData.legendHeight - padding[2]) * percentToNum(radius)) / 2\n  }\n\n  chartData.radarAxis.center = [centerX, centerY]\n  chartData.radarAxis.radius = radius\n\n  let spacingAangle = (2 * Math.PI) / categories.length\n  let start = Math.PI / 2 // 以90度为起点, 逆时针累加\n\n  let arr = []\n  for (let i = 0; i < splitNumber; i++) {\n    let scale = (splitNumber - i) / splitNumber\n    arr[i] = categories.reduce((arr, item, index) => {\n      let endPoint = {\n        x: radius * Math.cos(start + spacingAangle * index) * scale,\n        y: radius * Math.sin(start + spacingAangle * index) * scale,\n      }\n      arr.push(convertCoordinateOrigin(endPoint, chartData.radarAxis.center))\n      return arr\n    }, [])\n  }\n\n  chartData.radarAxis.lineEndPosition = arr\n\n  if (radarAxisNameShow) {\n    chartData.radarAxis.namePosition = categories.reduce((arr, item, index) => {\n      let point = {\n        x: (radius + radarAxisNameFontSize / 2 + radarAxisNameMargin) * Math.cos(start + spacingAangle * index),\n        y: (radius + radarAxisNameFontSize / 2 + radarAxisNameMargin) * Math.sin(start + spacingAangle * index),\n      }\n      let position = convertCoordinateOrigin(point, chartData.radarAxis.center)\n\n      context.font = `${radarAxisNameFontSize}px`\n\n      arr.push({\n        text: item,\n        point,\n        position,\n      })\n      return arr\n    }, [])\n  }\n\n  console.log('complete calAxisRadarData', this.chartData.radarAxis)\n}\n","export default function calChartBarData() {\n  let { opts, chartData } = this\n  let { series, xAxis, yAxis } = opts\n\n  let {\n    xStart,\n    xEnd,\n    yStart,\n    yEnd,\n    yZero,\n    yPlusSpacing,\n    yMinusSpacing,\n    ySpacing,\n    yEachSpacing,\n    xZero,\n    xPlusSpacing,\n    xMinusSpacing,\n    xSpacing,\n    xEachSpacing,\n    yMaxData,\n    yMinData,\n    yDataRange,\n    xMaxData,\n    xMinData,\n    xDataRange,\n    xAxisLabelPoint,\n    yAxisLabelPoint,\n  } = chartData.axisData\n\n  let autoWidth = 0\n  let autoWidthNumber = 0\n  let sumWidth = 0\n\n  let maxData = xAxis.type == 'value' ? xMaxData : yMaxData\n  let minData = xAxis.type == 'value' ? xMinData : yMinData\n  let dataRange = xAxis.type == 'value' ? xDataRange : yDataRange\n  let valueAxisPlusSpacing = xAxis.type == 'value' ? xPlusSpacing : yPlusSpacing\n  let valueAxisMinusSpacing = xAxis.type == 'value' ? xMinusSpacing : yMinusSpacing\n  let valueAxisSpacing = xAxis.type == 'value' ? xSpacing : ySpacing\n  let categoryAxisEachSpacing = xAxis.type == 'category' ? xEachSpacing : yEachSpacing\n  let categoryAxisData = xAxis.type == 'category' ? xAxis.data : yAxis.data\n\n  let allDataObject = {}\n  series.forEach(seriesItem => {\n    if (seriesItem.stack) {\n      if (!allDataObject[seriesItem.stack]) {\n        allDataObject[seriesItem.stack] = []\n      }\n\n      allDataObject[seriesItem.stack].push(seriesItem)\n    } else {\n      if (!allDataObject[seriesItem.name]) {\n        allDataObject[seriesItem.name] = []\n      }\n\n      allDataObject[seriesItem.name].push(seriesItem)\n    }\n  })\n\n  let chartBar = []\n  for (let i = 0, len = categoryAxisData.length; i < len; i++) {\n    let chartBarArrItem = []\n\n    Object.keys(allDataObject).forEach(key => {\n      chartBarArrItem.push(allDataObject[key])\n    })\n    chartBar.push(chartBarArrItem)\n  }\n\n  chartData.chartBar = JSON.parse(JSON.stringify(chartBar)).map((barItemArr, barItemArrIndex) => {\n    barItemArr.forEach((barItem, barIndex) => {\n      barItem.forEach((seriesItem, seriesIndex) => {\n        let isShow = true\n        if (seriesItem.showIndex && seriesItem.showIndex.length) {\n          isShow = seriesItem.showIndex.some(showIndex => {\n            return showIndex == chartBarArrIndex\n          })\n        }\n        seriesItem.show = isShow\n        seriesItem.data = seriesItem.data[barItemArrIndex]\n\n        if (seriesIndex == 0) {\n          let { barMaxWidth, barMinWidth, barWidth, barGap } = seriesItem\n          if (typeof barWidth == 'number') {\n            if (barWidth > barMaxWidth) {\n              seriesItem.barWidth = barMaxWidth\n            }\n            if (barWidth < barMinWidth) {\n              seriesItem.barWidth = barMinWidth\n            }\n\n            if (barItemArrIndex == 0) {\n              sumWidth += seriesItem.barWidth\n            }\n          } else {\n            if (barItemArrIndex == 0) {\n              autoWidthNumber++\n            }\n          }\n        } else {\n          seriesItem.barWidth = barItem[0].barWidth\n        }\n      })\n\n      if (barItemArrIndex == 0) {\n        if (barIndex == 0) {\n          sumWidth += 2 * barItem[0].barGap\n        } else {\n          sumWidth += barItem[0].barGap\n        }\n      }\n    })\n\n    return barItemArr\n  })\n\n  // 计算autoWidth\n  if (sumWidth + autoWidthNumber < categoryAxisEachSpacing) {\n    autoWidth = (categoryAxisEachSpacing - sumWidth) / autoWidthNumber\n  } else {\n    autoWidth = 1\n  }\n\n  // 修正barWidth, 计算sumWidth\n  chartData.chartBar.forEach((barItemArr, barItemArrIndex) => {\n    barItemArr.forEach((barItem, barIndex) => {\n      barItem.forEach((seriesItem, seriesIndex) => {\n        let { barMaxWidth, barWidth } = seriesItem\n        if (seriesIndex == 0 && barWidth == 'auto') {\n          seriesItem.barWidth = autoWidth > barMaxWidth ? barMaxWidth : autoWidth\n        } else {\n          seriesItem.barWidth = barItem[0].barWidth\n          seriesItem.barGap = barItem[0].barGap\n        }\n\n        if (barItemArrIndex == 0 && seriesIndex == 0 && barWidth == 'auto') {\n          sumWidth += seriesItem.barWidth\n        }\n      })\n    })\n  })\n\n  if (xAxis.type == 'category') {\n    chartData.chartBar.forEach((barItemArr, barItemArrIndex) => {\n      let x = xAxisLabelPoint[barItemArrIndex].x - sumWidth / 2\n\n      barItemArr.forEach((barItem, barIndex) => {\n        x += barItem[0].barGap + barItem[0].barWidth / 2\n\n        let yPositive = 0\n        let yNagative = 0\n\n        if (maxData >= 0 && minData >= 0) {\n          yPositive = yStart\n        } else if (maxData <= 0 && minData <= 0) {\n          yNagative = yEnd\n        } else {\n          yPositive = yZero\n          yNagative = yZero\n        }\n\n        barItem.forEach((seriesItem, seriesIndex) => {\n          seriesItem.x = x\n\n          // 记录y坐标点和柱体高度\n          let barHeight = 0\n\n          if (maxData >= 0 && minData >= 0) {\n            if (seriesItem.data == 0) {\n              seriesItem.y = yStart\n              barHeight = 0\n            } else {\n              seriesItem.y = yPositive\n              barHeight = (valueAxisSpacing * (seriesItem.data - minData)) / dataRange\n              yPositive -= barHeight\n            }\n          } else if (maxData <= 0 && minData <= 0) {\n            if (seriesItem.data == 0) {\n              seriesItem.y = yEnd\n              barHeight = 0\n            } else {\n              seriesItem.y = yNagative\n              barHeight = (valueAxisSpacing * (Math.abs(seriesItem.data) - Math.abs(maxData))) / dataRange\n              yNagative += barHeight\n            }\n          } else {\n            if (seriesItem.data > 0) {\n              seriesItem.y = yPositive\n              barHeight = (valueAxisPlusSpacing * seriesItem.data) / maxData\n              yPositive -= barHeight\n            } else if (seriesItem.data < 0) {\n              seriesItem.y = yNagative\n              barHeight = (valueAxisMinusSpacing * Math.abs(seriesItem.data)) / Math.abs(minData)\n              yNagative += barHeight\n            } else {\n              seriesItem.y = yZero\n              barHeight = 0\n            }\n          }\n\n          seriesItem.barHeight = barHeight\n        })\n\n        x += barItem[0].barWidth / 2\n      })\n    })\n  } else {\n    chartData.chartBar.forEach((barItemArr, barItemArrIndex) => {\n      let y = yAxisLabelPoint[barItemArrIndex].y + sumWidth / 2\n\n      barItemArr.forEach((barItem, barIndex) => {\n        y -= barItem[0].barGap + barItem[0].barWidth / 2\n\n        let xPositive = 0\n        let xNagative = 0\n\n        if (maxData >= 0 && minData >= 0) {\n          xPositive = xStart\n        } else if (maxData <= 0 && minData <= 0) {\n          xNagative = xEnd\n        } else {\n          xPositive = xZero\n          xNagative = xZero\n        }\n\n        barItem.forEach((seriesItem, seriesIndex) => {\n          seriesItem.y = y\n\n          // 记录y坐标点和柱体高度\n          let barHeight = 0\n\n          if (maxData >= 0 && minData >= 0) {\n            seriesItem.x = xPositive\n            barHeight = (valueAxisSpacing * (seriesItem.data - minData)) / dataRange\n            xPositive += barHeight\n          } else if (maxData <= 0 && minData <= 0) {\n            seriesItem.x = xNagative\n            barHeight = (valueAxisSpacing * (Math.abs(seriesItem.data) - Math.abs(maxData))) / dataRange\n            xNagative -= barHeight\n          } else {\n            if (seriesItem.data > 0) {\n              seriesItem.x = xPositive\n              barHeight = (valueAxisPlusSpacing * seriesItem.data) / maxData\n              xPositive += barHeight\n            } else {\n              seriesItem.x = xNagative\n              barHeight = (valueAxisMinusSpacing * Math.abs(seriesItem.data)) / Math.abs(minData)\n              xNagative -= barHeight\n            }\n          }\n\n          seriesItem.barHeight = barHeight\n        })\n\n        y -= barItem[0].barWidth / 2\n      })\n    })\n  }\n\n  console.log('complete calChartBarData', this.chartData.chartBar)\n}\n","export default function calChartLineData() {\n  let { opts, chartData } = this\n  let { series, xAxis } = opts\n\n  let {\n    xStart,\n    xEnd,\n    yStart,\n    yEnd,\n    yZero,\n    yPlusSpacing,\n    yMinusSpacing,\n    ySpacing,\n    xZero,\n    xPlusSpacing,\n    xMinusSpacing,\n    xSpacing,\n    yMaxData,\n    yMinData,\n    yDataRange,\n    xMaxData,\n    xMinData,\n    xDataRange,\n    xAxisLabelPoint,\n    yAxisLabelPoint,\n  } = chartData.axisData\n\n  let maxData = xAxis.type == 'value' ? xMaxData : yMaxData\n  let minData = xAxis.type == 'value' ? xMinData : yMinData\n  let dataRange = xAxis.type == 'value' ? xDataRange : yDataRange\n  let valueAxisPlusSpacing = xAxis.type == 'value' ? xPlusSpacing : yPlusSpacing\n  let valueAxisMinusSpacing = xAxis.type == 'value' ? xMinusSpacing : yMinusSpacing\n  let valueAxisSpacing = xAxis.type == 'value' ? xSpacing : ySpacing\n\n  if (xAxis.type == 'category') {\n    chartData.chartLine = JSON.parse(JSON.stringify(series)).reduce((chartLineArr, seriesItem) => {\n      seriesItem.data = seriesItem.data.reduce((dataArr, dataItem, dataIndex) => {\n        let itemHeight = 0\n        let y = 0\n\n        dataItem = dataItem > maxData ? maxData : dataItem\n        dataItem = dataItem < minData ? minData : dataItem\n\n        if (maxData >= 0 && minData >= 0) {\n          itemHeight = (valueAxisSpacing * (dataItem - minData)) / dataRange\n          y = yStart - itemHeight\n        } else if (maxData <= 0 && minData <= 0) {\n          itemHeight = (valueAxisSpacing * (Math.abs(dataItem) - Math.abs(maxData))) / dataRange\n          y = yEnd + itemHeight\n        } else {\n          if (dataItem > 0) {\n            itemHeight = (valueAxisPlusSpacing * dataItem) / maxData\n            y = yZero - itemHeight\n          } else {\n            itemHeight = (valueAxisMinusSpacing * Math.abs(dataItem)) / Math.abs(minData)\n            y = yZero + itemHeight\n          }\n        }\n        dataArr.push({\n          x: xAxisLabelPoint[dataIndex].x,\n          y,\n          data: dataItem,\n          height: itemHeight,\n        })\n        return dataArr\n      }, [])\n\n      chartLineArr.push(seriesItem)\n\n      return chartLineArr\n    }, [])\n  } else {\n    chartData.chartLine = JSON.parse(JSON.stringify(series)).reduce((chartLineArr, seriesItem) => {\n      seriesItem.data = seriesItem.data.reduce((dataArr, dataItem, dataIndex) => {\n        let itemHeight = 0\n        let x = 0\n\n        dataItem = dataItem > maxData ? maxData : dataItem\n        dataItem = dataItem < minData ? minData : dataItem\n\n        if (maxData >= 0 && minData >= 0) {\n          itemHeight = (valueAxisSpacing * (dataItem - minData)) / dataRange\n          x = xStart + itemHeight\n        } else if (maxData <= 0 && minData <= 0) {\n          itemHeight = (valueAxisSpacing * (Math.abs(dataItem) - Math.abs(maxData))) / dataRange\n          x = xEnd - itemHeight\n        } else {\n          if (dataItem > 0) {\n            itemHeight = (valueAxisPlusSpacing * dataItem) / maxData\n            x = xZero + itemHeight\n          } else {\n            itemHeight = (valueAxisMinusSpacing * Math.abs(dataItem)) / Math.abs(minData)\n            x = xZero - itemHeight\n          }\n        }\n\n        dataArr.push({\n          x,\n          y: yAxisLabelPoint[dataIndex].y,\n          data: dataItem,\n          height: itemHeight,\n        })\n        return dataArr\n      }, [])\n\n      chartLineArr.push(seriesItem)\n\n      return chartLineArr\n    }, [])\n  }\n\n  console.log('complete calChartLineData', this.chartData.chartLine)\n}\n","import { percentToNum } from '../util/util'\n\nexport default function calChartPieData() {\n  let { opts, legendData, chartData } = this\n  let { width, height, series, padding } = opts\n\n  chartData.chartPie = JSON.parse(JSON.stringify(series[0]))\n\n  let { data, center, radius } = chartData.chartPie\n  let [centerX, centerY] = center\n  let [radius1, radius2] = radius\n  let valueSum = 0\n\n  valueSum = data.reduce((sum, dataItem) => {\n    sum += dataItem.value === null ? 0 : dataItem.value\n    return sum\n  }, 0)\n\n  chartData.chartPie.valueSum = valueSum\n\n  if (typeof centerX == 'string') {\n    centerX = width * percentToNum(centerX)\n  }\n  if (typeof centerY == 'string') {\n    centerY = (height - legendData.legendHeight - padding[2]) * percentToNum(centerY)\n  }\n  if (typeof radius1 == 'string') {\n    radius1 = ((height - legendData.legendHeight - padding[2]) * percentToNum(radius1)) / 2\n  }\n  if (typeof radius2 == 'string') {\n    radius2 = ((height - legendData.legendHeight - padding[2]) * percentToNum(radius2)) / 2\n  }\n  chartData.chartPie.center = [centerX, centerY]\n  chartData.chartPie.radius = [radius1, radius2]\n\n  console.log('complete calChartPieData', this.chartData.chartPie)\n}\n","import { convertCoordinateOrigin } from '../util/util'\n\nexport default function calChartRadarData() {\n  let { opts, chartData } = this\n  let { radarAxis, categories, series } = opts\n  let { max } = radarAxis\n  let { radius } = chartData.radarAxis\n\n  let maxData = 0\n  series.forEach(seriesItem => {\n    maxData = Math.max(maxData, ...seriesItem.data)\n  })\n  maxData = max == 'auto' ? maxData : max\n\n  let spacingAangle = (2 * Math.PI) / categories.length\n  let start = Math.PI / 2 // 以90度为起点, 逆时针累加\n\n  chartData.chartRadar = JSON.parse(JSON.stringify(series))\n  chartData.chartRadar.map(radarItem => {\n    radarItem.dataPosition = radarItem.data.reduce((arr, dataItem, dataIndex) => {\n      let scale = dataItem / maxData\n      let point = {\n        x: radius * Math.cos(start + spacingAangle * dataIndex) * scale,\n        y: radius * Math.sin(start + spacingAangle * dataIndex) * scale,\n      }\n      arr.push({\n        data: dataItem,\n        point,\n      })\n      return arr\n    }, [])\n\n    return radarItem\n  })\n\n  console.log('complete calChartRadarData', this.chartData.chartRadar)\n}\n","import { HEX2HSL, HSL2HEX } from '../util/util'\n\nexport default function calChartScatterData() {\n  let { opts, chartData } = this\n  let { series } = opts\n  let {\n    xStart,\n    xEnd,\n    yStart,\n    yEnd,\n    yZero,\n    yPlusSpacing,\n    yMinusSpacing,\n    ySpacing,\n    xZero,\n    xPlusSpacing,\n    xMinusSpacing,\n    xSpacing,\n    yMaxData,\n    yMinData,\n    yDataRange,\n    xMaxData,\n    xMinData,\n    xDataRange,\n  } = chartData.axisData\n\n  chartData.chartScatter = JSON.parse(JSON.stringify(series)).map(seriesItem => {\n    let { data, radius, itemStyle } = seriesItem\n    let { color: scatterItemColor } = itemStyle\n    let radiusMax, radiusMin, radiusRange\n    let zMax, zMin, zRange\n    let HSLColorMax, HSLColorMin, HSLColorRange\n\n    if (typeof radius !== 'number') {\n      radiusMax = radius[1]\n      radiusMin = radius[0]\n      radiusRange = radiusMax - radiusMin\n\n      let sortData = data.concat([]).sort((a, b) => {\n        return a.z - b.z\n      })\n      zMax = sortData[sortData.length - 1].z\n      zMin = sortData[0].z ? sortData[0].z : 0\n      zRange = zMax - zMin\n    }\n\n    if (typeof scatterItemColor !== 'string') {\n      let [HEXColorMin, HEXColorMax] = scatterItemColor\n      HSLColorMax = HEX2HSL(HEXColorMax)\n      HSLColorMin = HEX2HSL(HEXColorMin)\n      HSLColorRange = [HSLColorMax[0] - HSLColorMin[0], HSLColorMax[1] - HSLColorMin[1], HSLColorMax[2] - HSLColorMin[2]]\n\n      seriesItem.label.color = '#000000'\n    }\n\n    seriesItem.data = data.concat([]).map(dataItem => {\n      let { x, y, z } = dataItem\n      let positionX, positionY\n      let _radius, _color\n\n      if (yMaxData >= 0 && yMaxData >= 0) {\n        positionY = yStart - (ySpacing * (y - yMinData)) / yDataRange\n      } else if (yMinData <= 0 && yMinData <= 0) {\n        positionY = yEnd + (ySpacing * (Math.abs(y) - Math.abs(yMaxData))) / yDataRange\n      } else {\n        if (y > 0) {\n          positionY = yZero - (yPlusSpacing * y) / yMaxData\n        } else {\n          positionY = yZero + (yMinusSpacing * Math.abs(y)) / Math.abs(yMinData)\n        }\n      }\n\n      if (xMaxData >= 0 && xMaxData >= 0) {\n        positionX = xStart + (xSpacing * (x - xMinData)) / xDataRange\n      } else if (xMinData <= 0 && xMinData <= 0) {\n        positionX = xEnd - (xSpacing * (Math.abs(x) - Math.abs(xMaxData))) / xDataRange\n      } else {\n        if (x > 0) {\n          positionX = xZero + (xPlusSpacing * x) / xMaxData\n        } else {\n          positionX = xZero - (xMinusSpacing * Math.abs(x)) / Math.abs(xMinData)\n        }\n      }\n      dataItem.positionX = positionX\n      dataItem.positionY = positionY\n\n      if (typeof radius !== 'number') {\n        dataItem.z = z ? z : 0\n        let scale = (z - zMin) / zRange\n        dataItem.radius = radiusMin + radiusRange * scale\n      } else {\n        dataItem.radius = radius\n      }\n\n      if (typeof scatterItemColor !== 'string') {\n        dataItem.z = z ? z : 0\n        let scale = (z - zMin) / zRange\n        let HSLColor = [HSLColorMin[0] + HSLColorRange[0] * scale, HSLColorMin[1] + HSLColorRange[1] * scale, HSLColorMin[2] + HSLColorRange[2] * scale]\n\n        dataItem.color = HSL2HEX(HSLColor)\n      } else {\n        dataItem.color = scatterItemColor\n      }\n\n      return dataItem\n    })\n\n    return seriesItem\n  })\n\n  console.log('complete calChartScatterData', this.chartData.chartScatter)\n}\n","import { percentToNum } from '../util/util'\n\nexport default function calChartPieData() {\n  let { opts, legendData, chartData } = this\n  let { width, height, series, padding } = opts\n\n  let chartFunnel = JSON.parse(JSON.stringify(series[0]))\n  let { data, width: funnelWidth, height: funnelHeight, top, left, right, bottom, max, min, gap, sort, shape, funnelAlign, label, itemStyle } = chartFunnel\n  let { borderWidth } = itemStyle\n  let xStart = padding[3]\n  let xEnd = width - padding[1]\n  let yStart = padding[0]\n  let yEnd = height - padding[2] - legendData.legendHeight\n  let containerWidth = xEnd - xStart\n  let containerHeight = yEnd - yStart\n\n  max = max > 100 ? 100 : max\n  min = min < 0 ? 0 : min\n\n  xStart = left == 'auto' ? xStart : xStart + containerWidth * percentToNum(left)\n  xEnd = right == 'auto' ? xEnd : xEnd - containerWidth * percentToNum(right)\n  yStart = top == 'auto' ? yStart : yStart + containerHeight * percentToNum(top)\n  yEnd = bottom == 'auto' ? yEnd : yEnd - containerHeight * percentToNum(bottom)\n  containerWidth = funnelWidth == 'auto' ? xEnd - xStart : containerWidth * percentToNum(funnelWidth)\n  containerHeight = funnelHeight == 'auto' ? yEnd - yStart : containerHeight * percentToNum(funnelHeight)\n\n  let funnelItemHeight = (containerHeight - (data.length - 1) * gap) / data.length\n\n  data.forEach(dataItem => {\n    dataItem.value = dataItem.value > max ? max : dataItem.value\n    dataItem.value = dataItem.value < min ? min : dataItem.value\n\n    dataItem.width = containerWidth * (dataItem.value / max)\n    dataItem.height = funnelItemHeight\n  })\n\n  let pointX, pointY\n  if (funnelAlign == 'left') {\n    pointX = xStart\n    pointY = yStart\n  } else if (funnelAlign == 'right') {\n    pointX = xEnd\n    pointY = yStart\n  } else {\n    if (sort == 'ascending') {\n      pointX = xStart + data[data.length - 1].width / 2 - data[0].width / 2\n    } else {\n      pointX = xStart\n    }\n    pointY = yStart\n  }\n\n  data.forEach((dataItem, dataIndex) => {\n    let point = []\n\n    if (funnelAlign == 'left') {\n      if (sort == 'descending') {\n        if (dataIndex + 1 == data.length) {\n          if (shape == 'funnel') {\n            point.push({ x: pointX, y: pointY })\n            point.push({ x: pointX + dataItem.width, y: pointY })\n            point.push({ x: pointX + dataItem.width, y: pointY + dataItem.height })\n            point.push({ x: pointX, y: pointY + dataItem.height })\n          } else if (shape == 'pyramid') {\n            point.push({ x: pointX, y: pointY })\n            point.push({ x: pointX + dataItem.width, y: pointY })\n            point.push({ x: pointX, y: pointY + dataItem.height })\n          }\n        } else {\n          point.push({ x: pointX, y: pointY })\n          point.push({ x: pointX + dataItem.width, y: pointY })\n          point.push({ x: pointX + data[dataIndex + 1].width, y: pointY + dataItem.height })\n          point.push({ x: pointX, y: pointY + dataItem.height })\n        }\n      } else if (sort == 'ascending') {\n        if (dataIndex == 0) {\n          if (shape == 'funnel') {\n            point.push({ x: pointX, y: pointY })\n            point.push({ x: pointX + dataItem.width, y: pointY })\n            point.push({ x: pointX + dataItem.width, y: pointY + dataItem.height })\n            point.push({ x: pointX, y: pointY + dataItem.height })\n          } else if (shape == 'pyramid') {\n            point.push({ x: pointX, y: pointY })\n            point.push({ x: pointX + dataItem.width, y: pointY + dataItem.height })\n            point.push({ x: pointX, y: pointY + dataItem.height })\n          }\n        } else {\n          point.push({ x: pointX, y: pointY })\n          point.push({ x: pointX + data[dataIndex - 1].width, y: pointY })\n          point.push({ x: pointX + dataItem.width, y: pointY + dataItem.height })\n          point.push({ x: pointX, y: pointY + dataItem.height })\n        }\n      }\n    } else if (funnelAlign == 'right') {\n      if (sort == 'descending') {\n        if (dataIndex + 1 == data.length) {\n          if (shape == 'funnel') {\n            point.push({ x: pointX, y: pointY })\n            point.push({ x: pointX - dataItem.width, y: pointY })\n            point.push({ x: pointX - dataItem.width, y: pointY + dataItem.height })\n            point.push({ x: pointX, y: pointY + dataItem.height })\n          } else if (shape == 'pyramid') {\n            point.push({ x: pointX, y: pointY })\n            point.push({ x: pointX - dataItem.width, y: pointY })\n            point.push({ x: pointX, y: pointY + dataItem.height })\n          }\n        } else {\n          point.push({ x: pointX, y: pointY })\n          point.push({ x: pointX - dataItem.width, y: pointY })\n          point.push({ x: pointX - data[dataIndex + 1].width, y: pointY + dataItem.height })\n          point.push({ x: pointX, y: pointY + dataItem.height })\n        }\n      } else if (sort == 'ascending') {\n        if (dataIndex == 0) {\n          if (shape == 'funnel') {\n            point.push({ x: pointX, y: pointY })\n            point.push({ x: pointX - dataItem.width, y: pointY })\n            point.push({ x: pointX - dataItem.width, y: pointY + dataItem.height })\n            point.push({ x: pointX, y: pointY + dataItem.height })\n          } else if (shape == 'pyramid') {\n            point.push({ x: pointX, y: pointY })\n            point.push({ x: pointX - dataItem.width, y: pointY + dataItem.height })\n            point.push({ x: pointX, y: pointY + dataItem.height })\n          }\n        } else {\n          point.push({ x: pointX, y: pointY })\n          point.push({ x: pointX - data[dataIndex - 1].width, y: pointY })\n          point.push({ x: pointX - dataItem.width, y: pointY + dataItem.height })\n          point.push({ x: pointX, y: pointY + dataItem.height })\n        }\n      }\n    } else {\n      if (sort == 'descending') {\n        if (dataIndex + 1 == data.length) {\n          if (shape == 'funnel') {\n            point.push({ x: pointX, y: pointY })\n            point.push({ x: pointX + dataItem.width, y: pointY })\n            point.push({ x: pointX + dataItem.width, y: pointY + dataItem.height })\n            point.push({ x: pointX, y: pointY + dataItem.height })\n          } else if (shape == 'pyramid') {\n            point.push({ x: pointX, y: pointY })\n            point.push({ x: pointX + dataItem.width, y: pointY })\n            point.push({ x: pointX + dataItem.width / 2, y: pointY + dataItem.height })\n          }\n        } else {\n          point.push({ x: pointX, y: pointY })\n          point.push({ x: pointX + dataItem.width, y: pointY })\n          point.push({ x: pointX + dataItem.width / 2 + data[dataIndex + 1].width / 2, y: pointY + dataItem.height })\n          point.push({ x: pointX + dataItem.width / 2 - data[dataIndex + 1].width / 2, y: pointY + dataItem.height })\n        }\n      } else if (sort == 'ascending') {\n        if (dataIndex == 0) {\n          if (shape == 'funnel') {\n            point.push({ x: pointX, y: pointY })\n            point.push({ x: pointX + dataItem.width, y: pointY })\n            point.push({ x: pointX + dataItem.width, y: pointY + dataItem.height })\n            point.push({ x: pointX, y: pointY + dataItem.height })\n          } else if (shape == 'pyramid') {\n            point.push({ x: pointX + dataItem.width / 2, y: pointY })\n            point.push({ x: pointX + dataItem.width, y: pointY + dataItem.height })\n            point.push({ x: pointX, y: pointY + dataItem.height })\n          }\n        } else {\n          point.push({ x: pointX + dataItem.width / 2 - data[dataIndex - 1].width / 2, y: pointY })\n          point.push({ x: pointX + dataItem.width / 2 + data[dataIndex - 1].width / 2, y: pointY })\n          point.push({ x: pointX + dataItem.width, y: pointY + dataItem.height })\n          point.push({ x: pointX, y: pointY + dataItem.height })\n        }\n      }\n    }\n\n    dataItem.point = point\n\n    let medianWidth\n    if (sort == 'descending') {\n      if (dataIndex + 1 == data.length) {\n        medianWidth = shape == 'funnel' ? dataItem.width : dataItem.width / 2\n      } else {\n        medianWidth = (dataItem.width + data[dataIndex + 1].width) / 2\n      }\n    } else {\n      if (dataIndex == 0) {\n        medianWidth = shape == 'funnel' ? dataItem.width : dataItem.width / 2\n      } else {\n        medianWidth = (dataItem.width + data[dataIndex - 1].width) / 2\n      }\n    }\n\n    if (label.position == 'inside') {\n      if (funnelAlign == 'left') {\n        dataItem.textPoint = { x: pointX + medianWidth / 2, y: pointY + dataItem.height / 2 }\n      } else if (funnelAlign == 'right') {\n        dataItem.textPoint = { x: pointX - medianWidth / 2, y: pointY + dataItem.height / 2 }\n      } else {\n        dataItem.textPoint = { x: pointX + dataItem.width / 2, y: pointY + dataItem.height / 2 }\n      }\n    } else {\n      if (funnelAlign == 'left') {\n        dataItem.textPoint = { x: pointX + medianWidth + label.margin, y: pointY + dataItem.height / 2 }\n      } else if (funnelAlign == 'right') {\n        dataItem.textPoint = { x: pointX - medianWidth - label.margin, y: pointY + dataItem.height / 2 }\n      } else {\n        dataItem.textPoint = { x: pointX + dataItem.width / 2 + medianWidth / 2 + label.margin, y: pointY + dataItem.height / 2 }\n      }\n    }\n\n    if (dataIndex + 1 !== data.length) {\n      if (funnelAlign == 'center') {\n        pointX = pointX + dataItem.width / 2 - data[dataIndex + 1].width / 2\n        pointY = pointY + dataItem.height + gap\n      } else {\n        pointY = pointY + dataItem.height + gap\n      }\n    }\n  })\n\n  chartData.chartFunnel = chartFunnel\n\n  console.log('complete calChartFunnelData', this.chartData.chartFunnel)\n}\n","/**\n * 绘制背景图\n */\n\nexport default function drawBackground(startX = 0, startY = 0, endX = this.opts.width, endY = this.opts.height) {\n  this.context.fillStyle = this.opts.backgroundColor\n  this.context.fillRect(startX, startY, endX, endY)\n\n  console.log('complete drawBackground')\n}\n","/**\n * 绘制图例组件\n */\n\nexport default function drawLegend() {\n  if (!this.opts.legend.show) return\n\n  let { context, opts, legendData } = this\n  let { type, legend } = opts\n  let { type: legendType, shapeWidth, shapeHeight, itemGap, marginTop, textStyle } = legend\n  let { fontSize, color, padding } = textStyle\n  let { legendList, legendWidth, legendHeight } = legendData\n\n  if (legendType == 'default') {\n    switch (type) {\n      case 'bar':\n        legendType = 'rect'\n        break\n      case 'line':\n        legendType = 'line'\n        break\n      case 'pie':\n        legendType = 'circle'\n        break\n      case 'radar':\n        legendType = 'rect'\n        break\n      case 'scatter':\n        legendType = 'circle'\n        break\n      case 'funnel':\n        legendType = 'rect'\n        break\n    }\n  }\n\n  let legendHeightMax = Math.max(shapeHeight, fontSize)\n  let startY = opts.height - opts.padding[2] - legendHeight + marginTop\n  let startX = (opts.width - legendWidth) / 2\n  legendList.forEach((listItem, listIndex) => {\n    startX = (opts.width - legendWidth) / 2 // 重置startX\n\n    listItem.forEach(legendItem => {\n      switch (legendType) {\n        case 'circle':\n          context.beginPath()\n          context.moveTo(startX + shapeWidth / 2, startY + legendHeightMax / 2)\n          context.arc(startX + shapeWidth / 2, startY + legendHeightMax / 2, shapeWidth / 2, 0, 2 * Math.PI)\n          context.closePath()\n\n          context.fillStyle = legendItem.color\n          context.fill()\n          break\n        case 'line':\n          let lineLength = (shapeWidth - shapeHeight) / 2\n          lineLength < 0 ? 0 : lineLength\n\n          context.beginPath()\n          context.moveTo(startX, startY + legendHeightMax / 2)\n          context.lineTo(startX + lineLength - 2, startY + legendHeightMax / 2)\n          context.closePath()\n          context.lineWidth = 2\n          context.strokeStyle = legendItem.color\n          context.stroke()\n\n          context.beginPath()\n          context.moveTo(startX + shapeWidth / 2, startY + legendHeightMax / 2)\n          context.arc(startX + shapeWidth / 2, startY + legendHeightMax / 2, shapeHeight / 2, 0, 2 * Math.PI)\n          context.closePath()\n          context.fillStyle = legendItem.color\n          context.fill()\n\n          context.beginPath()\n          context.moveTo(startX + lineLength + shapeHeight + 2, startY + legendHeightMax / 2)\n          context.lineTo(startX + shapeWidth, startY + legendHeightMax / 2)\n          context.closePath()\n          context.lineWidth = 2\n          context.strokeStyle = legendItem.color\n          context.stroke()\n\n          break\n        case 'rect':\n          context.fillStyle = legendItem.color\n          if (shapeHeight >= fontSize) {\n            context.fillRect(startX, startY, shapeWidth, shapeHeight)\n          } else {\n            context.fillRect(startX, startY + (fontSize - shapeHeight) / 2, shapeWidth, shapeHeight)\n          }\n          break\n      }\n\n      startX += shapeWidth + padding\n\n      context.save()\n      context.textAlign = 'left'\n      context.textBaseline = 'middle'\n      context.font = `${fontSize}px`\n      context.fillStyle = color\n      context.fillText(legendItem.name, startX, startY + legendHeightMax / 2)\n      context.restore()\n\n      startX += legendItem.measureText + itemGap\n    })\n\n    startY += legendHeightMax + itemGap\n  })\n\n  console.log('complete drawLegend')\n}\n","/**\n * 绘制Y轴, 包括 axisName(名称), axisLabel(标签), axisTick(刻度线), axisLine(轴线)\n */\nexport default function drawAxisY() {\n  let { context, opts, chartData } = this\n  let { xAxis, yAxis } = opts\n\n  let {\n    show: xAxisShow,\n    type: xAxisType,\n    axisName: xAxisName,\n    axisLabel: xAxisLabel,\n    axisTick: xAxisTick,\n    axisLine: xAxisLine,\n    axisSplitLine: xAxisSplitLine,\n  } = xAxis\n  let {\n    show: yAxisShow,\n    type: yAxisType,\n    axisName: yAxisName,\n    axisLabel: yAxisLabel,\n    axisTick: yAxisTick,\n    axisLine: yAxisLine,\n    axisSplitLine: yAxisSplitLine,\n  } = yAxis\n\n  let { show: xAxisNameShow, textStyle: xAxisNameTextStyle } = xAxisName\n  let { show: xAxisLabelShow, textStyle: xAxisLabelTextStyle, rotate: xAxisLabelRotate } = xAxisLabel\n  let { show: xAxisTickShow, lineStyle: xAxisTickStyle } = xAxisTick\n  let { show: xAxisLineShow, lineStyle: xAxisLineStyle } = xAxisLine\n  let { show: xAxisSplitLineShow, lineStyle: xAxisSplitLineStyle } = xAxisSplitLine\n\n  let { show: yAxisNameShow, textStyle: yAxisNameTextStyle } = yAxisName\n  let { show: yAxisLabelShow, textStyle: yAxisLabelTextStyle } = yAxisLabel\n  let { show: yAxisTickShow, lineStyle: yAxisTickStyle } = yAxisTick\n  let { show: yAxisLineShow, lineStyle: yAxisLineStyle } = yAxisLine\n  let { show: yAxisSplitLineShow, lineStyle: yAxisSplitLineStyle } = yAxisSplitLine\n\n  let { color: xAxisNameColor, fontSize: xAxisNameFontSize } = xAxisNameTextStyle\n  let { color: xAxisLabelColor, fontSize: xAxisLabelFontSize } = xAxisLabelTextStyle\n  let { color: xAxisTickLineColor, lineWidth: xAxisTickLineWidth } = xAxisTickStyle\n  let { color: xAxisLineColor, lineWidth: xAxisLineWidth } = xAxisLineStyle\n  let { color: xAxisSplitLineColor, lineWidth: xAxisSplitLineWidth } = xAxisSplitLineStyle\n\n  let { color: yAxisNameColor, fontSize: yAxisNameFontSize } = yAxisNameTextStyle\n  let { color: yAxisLabelColor, fontSize: yAxisLabelFontSize } = yAxisLabelTextStyle\n  let { color: yAxisTickLineColor, lineWidth: yAxisTickLineWidth } = yAxisTickStyle\n  let { color: yAxisLineColor, lineWidth: yAxisLineWidth } = yAxisLineStyle\n  let { color: yAxisSplitLineColor, lineWidth: yAxisSplitLineWidth } = yAxisSplitLineStyle\n\n  let {\n    xAxisLabelPoint,\n    xAxisTickPoint,\n    xAxisLinePoint,\n    xAxisSplitLinePoint,\n    xAxisNamePoint,\n    yAxisLabelPoint,\n    yAxisTickPoint,\n    yAxisLinePoint,\n    yAxisSplitLinePoint,\n    yAxisNamePoint,\n  } = chartData.axisData\n\n  if (yAxisShow) {\n    if (yAxisLabelShow) {\n      context.save()\n      context.font = `${yAxisLabelFontSize}px`\n      context.fillStyle = yAxisLabelColor\n      context.textAlign = 'right'\n      context.textBaseline = 'middle'\n      yAxisLabelPoint.forEach(item => {\n        if (yAxisType == 'value' || item.show) {\n          context.fillText(item.text, item.x, item.y)\n        }\n      })\n      context.restore()\n    }\n\n    if (yAxisSplitLineShow) {\n      context.lineWidth = yAxisSplitLineWidth\n      context.strokeStyle = yAxisSplitLineColor\n\n      yAxisSplitLinePoint.forEach((item, index) => {\n        if (yAxisType == 'value' || item.show) {\n          context.beginPath()\n          context.moveTo(item.startX, item.startY)\n          context.lineTo(item.endX, item.endY)\n          context.closePath()\n          context.stroke()\n        }\n      })\n    }\n\n    if (yAxisNameShow) {\n      context.save()\n      context.font = `${yAxisNameFontSize}px`\n      console.log(123, this.opts.yAxis,yAxisName,yAxisNameFontSize)\n      context.fillStyle = yAxisNameColor\n      context.textAlign = 'center'\n      context.textBaseline = 'bottom'\n      context.fillText(yAxisNamePoint.text, yAxisNamePoint.x, yAxisNamePoint.y)\n      context.restore()\n    }\n  }\n\n  if (xAxisShow) {\n    if (xAxisLabelShow) {\n      context.save()\n      context.font = `${xAxisLabelFontSize}px`\n      context.fillStyle = xAxisLabelColor\n      context.textBaseline = 'top'\n\n      if (xAxisLabelRotate == 0) {\n        context.textAlign = 'center'\n      } else if (xAxisLabelRotate > 0) {\n        context.textAlign = 'right'\n      } else if (xAxisLabelRotate < 0) {\n        context.textAlign = 'left'\n      }\n\n      xAxisLabelPoint.forEach(item => {\n        if (xAxisType == 'value' || item.show) {\n          if (xAxisLabelRotate == 0) {\n            context.fillText(item.text, item.x, item.y)\n          } else {\n            context.save()\n            context.translate(item.x, item.y)\n            context.rotate((-xAxisLabelRotate * Math.PI) / 180)\n            context.fillText(item.text, 0, 0)\n            context.restore()\n          }\n        }\n      })\n\n      context.restore()\n    }\n\n    if (xAxisSplitLineShow) {\n      context.lineWidth = xAxisSplitLineWidth\n      context.strokeStyle = xAxisSplitLineColor\n\n      xAxisSplitLinePoint.forEach((item, index) => {\n        if (xAxisType == 'value' || item.show) {\n          context.beginPath()\n          context.moveTo(item.startX, item.startY)\n          context.lineTo(item.endX, item.endY)\n          context.closePath()\n          context.stroke()\n        }\n      })\n    }\n\n    if (xAxisNameShow) {\n      context.save()\n      context.font = `${xAxisNameFontSize}px`\n      context.fillStyle = xAxisNameColor\n      context.textAlign = 'left'\n      context.textBaseline = 'middle'\n      context.fillText(xAxisNamePoint.text, xAxisNamePoint.x, xAxisNamePoint.y)\n      context.restore()\n    }\n  }\n\n  // 防止轴线被网格线覆盖, 最后绘制\n  if (yAxisShow) {\n    if (yAxisTickShow) {\n      context.lineWidth = yAxisTickLineWidth\n      context.strokeStyle = yAxisTickLineColor\n\n      yAxisTickPoint.forEach(item => {\n        if (yAxisType == 'value' || item.show) {\n          context.beginPath()\n          context.moveTo(item.startX, item.startY)\n          context.lineTo(item.endX, item.endY)\n          context.closePath()\n          context.stroke()\n        }\n      })\n    }\n\n    if (yAxisLineShow) {\n      context.beginPath()\n      context.moveTo(yAxisLinePoint.startX, yAxisLinePoint.startY)\n      context.lineTo(yAxisLinePoint.endX, yAxisLinePoint.endY)\n      context.closePath()\n\n      context.lineWidth = yAxisLineWidth\n      context.strokeStyle = yAxisLineColor\n      context.stroke()\n    }\n  }\n\n  if (xAxisShow) {\n    if (xAxisTickShow) {\n      context.lineWidth = xAxisTickLineWidth\n      context.strokeStyle = xAxisTickLineColor\n\n      xAxisTickPoint.forEach(item => {\n        if (xAxisType == 'value' || item.show) {\n          context.beginPath()\n          context.moveTo(item.startX, item.startY)\n          context.lineTo(item.endX, item.endY)\n          context.closePath()\n          context.stroke()\n        }\n      })\n    }\n\n    if (xAxisLineShow) {\n      context.beginPath()\n      context.moveTo(xAxisLinePoint.startX, xAxisLinePoint.startY)\n      context.lineTo(xAxisLinePoint.endX, xAxisLinePoint.endY)\n      context.closePath()\n\n      context.lineWidth = xAxisLineWidth\n      context.strokeStyle = xAxisLineColor\n      context.stroke()\n    }\n  }\n\n  console.log('complete drawAxis')\n}\n","export default function drawAxisRadar() {\n  let { context, opts, chartData } = this\n  let { backgroundColor, radarAxis, categories } = opts\n  let {\n    shape: radarAxisShape,\n    splitNumber,\n    axisName: radarAxisName,\n    axisLine: radarAxisLine,\n    splitLine: radarAxisSplitLine,\n    splitArea: radarAxisSplitArea,\n  } = radarAxis\n  let { show: radarAxisNameShow, textStyle: radarAxisNameTextStyle } = radarAxisName\n  let { show: radarAxisLineShow, lineStyle: radarAxisLineStyle } = radarAxisLine\n  let { show: radarAxisSplitLineShow, lineStyle: radarAxisSplitLineStyle } = radarAxisSplitLine\n\n  let { color: radarAxisNameColor, fontSize: radarAxisNameFontSize } = radarAxisNameTextStyle\n  let { color: radarAxisLineColor, lineWidth: radarAxisLineWidth } = radarAxisLineStyle\n  let { color: radarAxisSplitLineColor, lineWidth: radarAxisSplitLineWidth } = radarAxisSplitLineStyle\n\n  let { odd, even } = radarAxisSplitArea\n  let { show: oddSplitAreaShow, color: oddSplitAreaColor, opacity: oddSplitAreaOpacity } = odd\n  let { show: evenSplitAreaShow, color: evenSplitAreaColor, opacity: evenSplitAreaOpacity } = even\n\n  let { center, radius, lineEndPosition, namePosition } = chartData.radarAxis\n  let [centerX, centerY] = center\n\n  if (radarAxisShape == 'polygon') {\n    lineEndPosition.forEach((splitPositionArr, splitIndex) => {\n      let oddOrEven = (splitNumber - splitIndex) % 2 // 0为偶数，1为奇数\n\n      context.beginPath()\n      splitPositionArr.forEach((splitPositionItem, splitPositionIndex) => {\n        if (splitPositionIndex == 0) {\n          context.moveTo(splitPositionItem.x, splitPositionItem.y)\n        } else {\n          context.lineTo(splitPositionItem.x, splitPositionItem.y)\n        }\n      })\n      context.closePath()\n\n      // draw evenSplitArea\n      if (oddOrEven === 0 && oddSplitAreaShow) {\n        context.fillStyle = backgroundColor\n        context.fill() // 避免存在透明度时，上一次绘制颜色的影响\n        context.save()\n        context.globalAlpha = evenSplitAreaOpacity\n        context.fillStyle = evenSplitAreaColor\n        context.fill()\n        context.restore()\n      }\n\n      // draw oddSplitArea\n      if (oddOrEven === 1 && evenSplitAreaShow) {\n        context.fillStyle = backgroundColor\n        context.fill() // 避免存在透明度时，上一次绘制颜色的影响\n        context.save()\n        context.globalAlpha = oddSplitAreaOpacity\n        context.fillStyle = oddSplitAreaColor == 'auto' ? backgroundColor : oddSplitAreaColor\n        context.fill()\n        context.restore()\n      }\n\n      // draw radarAxisSplitLine\n      if (radarAxisSplitLineShow) {\n        context.lineWidth = radarAxisSplitLineWidth\n        context.strokeStyle = radarAxisSplitLineColor\n        context.stroke()\n      }\n    })\n  } else {\n    for (let index = 0; index < splitNumber; index++) {\n      let scale = (splitNumber - index) / splitNumber\n      let oddOrEven = (splitNumber - index) % 2 // 0为偶数，1为奇数\n\n      context.beginPath()\n      context.arc(centerX, centerY, radius * scale, 0, Math.PI * 2)\n\n      // draw evenSplitArea\n      if (oddOrEven === 0 && oddSplitAreaShow) {\n        context.fillStyle = backgroundColor\n        context.fill() // 避免存在透明度时，上一次绘制颜色的影响\n        context.save()\n        context.globalAlpha = evenSplitAreaOpacity\n        context.fillStyle = evenSplitAreaColor\n        context.fill()\n        context.restore()\n      }\n\n      // draw oddSplitArea\n      if (oddOrEven === 1 && evenSplitAreaShow) {\n        context.fillStyle = backgroundColor\n        context.fill() // 避免存在透明度时，上一次绘制颜色的影响\n        context.save()\n        context.globalAlpha = oddSplitAreaOpacity\n        context.fillStyle = oddSplitAreaColor == 'auto' ? backgroundColor : oddSplitAreaColor\n        context.fill()\n        context.restore()\n      }\n\n      // draw radarAxisSplitLine\n      if (radarAxisSplitLineShow) {\n        context.lineWidth = radarAxisSplitLineWidth\n        context.strokeStyle = radarAxisSplitLineColor\n        context.stroke()\n      }\n    }\n  }\n\n  // draw radarAxisLine\n  if (radarAxisLineShow) {\n    lineEndPosition[0].forEach(lineEndPositionItem => {\n      context.beginPath()\n      context.moveTo(centerX, centerY)\n      context.lineTo(lineEndPositionItem.x, lineEndPositionItem.y)\n      context.lineWidth = radarAxisLineWidth\n      context.strokeStyle = radarAxisLineColor\n      context.stroke()\n    })\n  }\n\n  // draw radarAxisName\n  if (radarAxisNameShow) {\n    namePosition.forEach(namePositionItem => {\n      let { text, point, position } = namePositionItem\n      let { x: pointX } = point\n      let { x: positionX, y: positionY } = position\n\n      context.save()\n      if (positionX == centerX) {\n        context.textAlign = 'center'\n      } else if (pointX > 0) {\n        context.textAlign = 'left'\n      } else if (pointX < 0) {\n        context.textAlign = 'right'\n      }\n\n      context.textBaseline = 'middle'\n\n      context.font = `${radarAxisNameFontSize}px`\n      context.fillStyle = radarAxisNameColor\n      context.fillText(text, positionX, positionY)\n      context.restore()\n    })\n  }\n\n  console.log('complete drawAxisRadar')\n}\n","export default function drawChartPie(process) {\n  let { context, opts, chartData } = this\n  let { label: globalLabel, xAxis } = opts\n\n  let { yMaxData, yMinData, xMaxData, xMinData } = chartData.axisData\n\n  let maxData = xAxis.type == 'value' ? xMaxData : yMaxData\n  let minData = xAxis.type == 'value' ? xMinData : yMinData\n\n  if (xAxis.type == 'category') {\n    chartData.chartBar.forEach((barItemArr, barItemArrIndex) => {\n      barItemArr.forEach((barItem, barIndex) => {\n        barItem.forEach((seriesItem, seriesIndex) => {\n          let { x, y, data, barWidth, barHeight, itemStyle } = seriesItem\n          let { color: barItemColor } = itemStyle\n\n          context.save()\n          context.fillStyle = barItemColor\n          if (data >= 0) {\n            context.fillRect(x - barWidth / 2, y, barWidth, -barHeight * process)\n          } else {\n            context.fillRect(x - barWidth / 2, y, barWidth, barHeight * process)\n          }\n\n          context.restore()\n        })\n      })\n    })\n\n    if (process == 1) {\n      chartData.chartBar.forEach((barItemArr, barItemArrIndex) => {\n        barItemArr.forEach((barItem, barIndex) => {\n          barItem.forEach((seriesItem, seriesIndex) => {\n            let { show: barItemShow, x, y, barWidth, barHeight, data, label, itemStyle } = seriesItem\n            let { show: labelShow, fontSize: labelFontSize, color: labelColor, margin: labelMargin } = label\n            let { color: barItemColor } = itemStyle\n\n            // globalLabel 权重大于 seriesLabel\n            labelShow = globalLabel && typeof globalLabel.show == 'boolean' ? globalLabel.show : labelShow\n            labelFontSize = globalLabel && globalLabel.fontSize ? globalLabel.fontSize : labelFontSize\n            labelColor = globalLabel && globalLabel.color ? globalLabel.color : labelColor\n            labelMargin = globalLabel && globalLabel.margin ? globalLabel.margin : labelMargin\n\n            if (labelShow && barItemShow) {\n              context.save()\n              context.font = `${labelFontSize}px`\n              context.strokeStyle = labelColor == 'auto' ? barItemColor : labelColor\n              context.fillStyle = '#ffffff'\n              context.textBaseline = 'middle'\n              context.textAlign = 'center'\n\n              if (data >= 0) {\n                context.strokeText(data, x, y - barHeight / 2)\n                context.fillText(data, x, y - barHeight / 2)\n              } else {\n                context.strokeText(data, x, y + barHeight / 2)\n                context.fillText(data, x, y + barHeight / 2)\n              }\n              context.restore()\n            }\n          })\n        })\n      })\n    }\n  } else {\n    chartData.chartBar.forEach((barItemArr, barItemArrIndex) => {\n      barItemArr.forEach((barItem, barIndex) => {\n        barItem.forEach((seriesItem, seriesIndex) => {\n          let { x, y, data, barWidth, barHeight, itemStyle } = seriesItem\n          let { color: barItemColor } = itemStyle\n\n          context.save()\n          context.fillStyle = barItemColor\n\n          if (data > 0) {\n            context.fillRect(x, y - (barWidth * process) / 2, barHeight, barWidth * process)\n          } else {\n            context.fillRect(x, y - (barWidth * process) / 2, -barHeight, barWidth * process)\n          }\n          context.restore()\n        })\n      })\n    })\n\n    if (process == 1) {\n      chartData.chartBar.forEach((barItemArr, barItemArrIndex) => {\n        barItemArr.forEach((barItem, barIndex) => {\n          barItem.forEach((seriesItem, seriesIndex) => {\n            let { show: barItemShow, x, y, barWidth, barHeight, data, label, itemStyle } = seriesItem\n            let { show: labelShow, fontSize: labelFontSize, color: labelColor, margin: labelMargin } = label\n            let { color: barItemColor } = itemStyle\n\n            // globalLabel 权重大于 seriesLabel\n            labelShow = globalLabel && typeof globalLabel.show == 'boolean' ? globalLabel.show : labelShow\n            labelFontSize = globalLabel && globalLabel.fontSize ? globalLabel.fontSize : labelFontSize\n            labelColor = globalLabel && globalLabel.color ? globalLabel.color : labelColor\n            labelMargin = globalLabel && globalLabel.margin ? globalLabel.margin : labelMargin\n\n            if (labelShow && barItemShow) {\n              context.save()\n              context.font = `${labelFontSize}px`\n              context.strokeStyle = labelColor == 'auto' ? barItemColor : labelColor\n              context.fillStyle = '#ffffff'\n              context.textBaseline = 'middle'\n              context.textAlign = 'center'\n\n              if (data >= 0) {\n                context.strokeText(data, x + barHeight / 2, y)\n                context.fillText(data, x + barHeight / 2, y)\n              } else {\n                context.strokeText(data, x - barHeight / 2, y)\n                context.fillText(data, x - barHeight / 2, y)\n              }\n              context.restore()\n            }\n          })\n        })\n      })\n    }\n  }\n\n  console.log('complete drawChartBar', process)\n}\n","export default function drawChartLine(process) {\n  let { context, opts, chartData } = this\n  let { label: globalLabel, xAxis } = opts\n\n  let { xStart, xEnd, yStart, yEnd, yZero, xZero, yMaxData, yMinData, xMaxData, xMinData } = chartData.axisData\n\n  let maxData = xAxis.type == 'value' ? xMaxData : yMaxData\n  let minData = xAxis.type == 'value' ? xMinData : yMinData\n\n  function isNotMiddlePoint(dataArr, i) {\n    if (dataArr[i - 1] && dataArr[i + 1]) {\n      return dataArr[i].y >= Math.max(dataArr[i - 1].y, dataArr[i + 1].y) || dataArr[i].y <= Math.min(dataArr[i - 1].y, dataArr[i + 1].y)\n    } else {\n      return false\n    }\n  }\n\n  function drawLine(line, itemStyle) {\n    let { show: lineShow, lineWidth, color: lineColor, opacity: lineOpacity } = line\n    let { color: lineItemColor } = itemStyle\n\n    if (lineShow) {\n      context.save()\n      context.lineJoin = 'round'\n      context.globalAlpha = lineOpacity\n      context.lineWidth = lineWidth\n      context.strokeStyle = lineColor == 'auto' ? lineItemColor : lineColor\n      context.stroke()\n      context.restore()\n    }\n  }\n\n  function drawArea(area, itemStyle, lineStartX, lineStartY, lineEndX, lineEndY) {\n    let { show: areaShow, color: areaColor, opacity: areaOpacity } = area\n    let { color: lineItemColor } = itemStyle\n\n    if (areaShow) {\n      if (xAxis.type == 'category') {\n        if (maxData >= 0 && minData >= 0) {\n          context.lineTo(lineEndX, yStart)\n          context.lineTo(lineStartX, yStart)\n        } else if (maxData <= 0 && minData <= 0) {\n          context.lineTo(lineEndX, yEnd)\n          context.lineTo(lineStartX, yEnd)\n        } else {\n          context.lineTo(lineEndX, yZero)\n          context.lineTo(lineStartX, yZero)\n        }\n      } else {\n        if (maxData >= 0 && minData >= 0) {\n          context.lineTo(xStart, lineEndY)\n          context.lineTo(xStart, lineStartY)\n        } else if (maxData <= 0 && minData <= 0) {\n          context.lineTo(xEnd, lineEndY)\n          context.lineTo(xEnd, lineStartY)\n        } else {\n          context.lineTo(xZero, lineEndY)\n          context.lineTo(xZero, lineStartY)\n        }\n      }\n      context.closePath()\n      context.save()\n      context.globalAlpha = areaOpacity\n      context.fillStyle = areaColor == 'auto' ? lineItemColor : areaColor\n      context.fill()\n      context.restore()\n    }\n  }\n\n  JSON.parse(JSON.stringify(chartData.chartLine)).forEach(lineItem => {\n    let { itemStyle, line, symbol, area, label, smooth, connectNulls } = lineItem\n    let { color: lineItemColor } = itemStyle\n    let { show: lineShow, lineWidth, color: lineColor, opacity: lineOpacity } = line\n    let { show: symbolShow, type: symbolType, size: symbolSize, color: symbolColor } = symbol\n    let { show: areaShow, color: areaColor, opacity: areaOpacity } = area\n    let { show: labelShow, fontSize: labelFontSize, color: labelColor, margin: labelMargin } = label\n\n    let lineStartX, lineStartY, lineEndX, lineEndY\n\n    if (smooth) {\n      // process更新y坐标数据\n      lineItem.data = lineItem.data.map(dataItem => {\n        let { x, y, height, data } = dataItem\n\n        if (xAxis.type == 'category') {\n          if (maxData >= 0 && minData >= 0) {\n            dataItem.y = y + height - height * process\n          } else if (maxData <= 0 && minData <= 0) {\n            dataItem.y = y - height + height * process\n          } else {\n            if (data > 0) {\n              dataItem.y = y + height - height * process\n            } else {\n              dataItem.y = y - height + height * process\n            }\n          }\n        } else {\n          if (maxData >= 0 && minData >= 0) {\n            dataItem.x = x - height + height * process\n          } else if (maxData <= 0 && minData <= 0) {\n            dataItem.x = x + height - height * process\n          } else {\n            if (data > 0) {\n              dataItem.x = x - height + height * process\n            } else {\n              dataItem.x = x + height - height * process\n            }\n          }\n        }\n        return dataItem\n      })\n      // 获取有效data\n      lineItem.validData = lineItem.data.filter(dataItem => {\n        return typeof dataItem.data == 'number'\n      })\n\n      // 计算贝塞尔曲线控制点并绘制路径\n      let bezierCurveData = connectNulls ? lineItem.validData : lineItem.data\n\n      bezierCurveData.forEach((dataItem, dataIndex, dataArr) => {\n        const a = 0.2\n        const b = 0.2\n        let pAx = null\n        let pAy = null\n        let pBx = null\n        let pBy = null\n        let { x, y, data } = dataItem\n\n        if (typeof data == 'number') {\n          if (lineStartX && lineStartY) {\n            let i = dataIndex - 1\n            if (i < 1) {\n              pAx = dataArr[0].x + (dataArr[1].x - dataArr[0].x) * a\n              pAy = dataArr[0].y + (dataArr[1].y - dataArr[0].y) * a\n            } else {\n              pAx = dataArr[i].x + (dataArr[i + 1].x - dataArr[i - 1].x) * a\n              pAy = dataArr[i].y + (dataArr[i + 1].y - dataArr[i - 1].y) * a\n            }\n\n            if (i > dataArr.length - 3) {\n              let last = dataArr.length - 1\n              pBx = dataArr[last].x - (dataArr[last].x - dataArr[last - 1].x) * b\n              pBy = dataArr[last].y - (dataArr[last].y - dataArr[last - 1].y) * b\n            } else {\n              pBx = dataArr[i + 1].x - (dataArr[i + 2].x - dataArr[i].x) * b\n              pBy = dataArr[i + 1].y - (dataArr[i + 2].y - dataArr[i].y) * b\n            }\n\n            if (isNotMiddlePoint(dataArr, i + 1)) {\n              pBy = dataArr[i + 1].y\n            }\n            if (isNotMiddlePoint(dataArr, i)) {\n              pAy = dataArr[i].y\n            }\n\n            context.bezierCurveTo(pAx, pAy, pBx, pBy, x, y)\n\n            lineEndX = x\n            lineEndY = y\n          } else {\n            context.beginPath()\n            context.moveTo(x, y)\n            lineStartX = x\n            lineStartY = y\n          }\n        }\n\n        if ((!connectNulls && typeof data !== 'number') || dataIndex + 1 == dataArr.length) {\n          if (lineEndX && lineEndY) {\n            drawLine(line, itemStyle)\n            drawArea(area, itemStyle, lineStartX, lineStartY, lineEndX, lineEndY)\n            lineEndX = null\n            lineEndY = null\n          }\n          lineStartX = null\n          lineStartY = null\n        }\n      })\n    } else {\n      lineItem.data.forEach((dataItem, dataIndex, dataArr) => {\n        let { x, y, height, data } = dataItem\n\n        if (xAxis.type == 'category') {\n          if (maxData >= 0 && minData >= 0) {\n            y = y + height - height * process\n          } else if (maxData <= 0 && minData <= 0) {\n            y = y - height + height * process\n          } else {\n            if (data > 0) {\n              y = y + height - height * process\n            } else {\n              y = y - height + height * process\n            }\n          }\n        } else {\n          if (maxData >= 0 && minData >= 0) {\n            x = x - height + height * process\n          } else if (maxData <= 0 && minData <= 0) {\n            x = x + height - height * process\n          } else {\n            if (data > 0) {\n              x = x - height + height * process\n            } else {\n              x = x + height - height * process\n            }\n          }\n        }\n\n        if (typeof data == 'number') {\n          if (lineStartX && lineStartY) {\n            context.lineTo(x, y)\n            lineEndX = x\n            lineEndY = y\n          } else {\n            context.beginPath()\n            context.moveTo(x, y)\n            lineStartX = x\n            lineStartY = y\n          }\n        }\n\n        if ((!connectNulls && typeof data !== 'number') || dataIndex + 1 == dataArr.length) {\n          if (lineEndX && lineEndY) {\n            drawLine(line, itemStyle)\n            drawArea(area, itemStyle, lineStartX, lineStartY, lineEndX, lineEndY)\n            lineStartX = null\n            lineStartY = null\n            lineEndX = null\n            lineEndY = null\n          }\n        }\n      })\n    }\n\n    if (process == 1) {\n      if (symbolShow) {\n        context.save()\n        lineItem.data.forEach(dataItem => {\n          let { x, y, data } = dataItem\n\n          if (typeof data !== 'number') return\n\n          switch (symbolType) {\n            case 'circle':\n              context.beginPath()\n              context.arc(x, y, symbolSize / 2, 0, 2 * Math.PI)\n              context.fillStyle = symbolColor == 'auto' ? lineItemColor : symbolColor\n              context.fill()\n\n              context.beginPath()\n              context.arc(x, y, symbolSize / 4, 0, 2 * Math.PI)\n              context.fillStyle = '#fff'\n              context.fill()\n              break\n          }\n        })\n        context.restore()\n      }\n\n      // globalLabel 权重大于 seriesLabel\n      labelShow = globalLabel && typeof globalLabel.show == 'boolean' ? globalLabel.show : labelShow\n      labelFontSize = globalLabel && globalLabel.fontSize ? globalLabel.fontSize : labelFontSize\n      labelColor = globalLabel && globalLabel.color ? globalLabel.color : labelColor\n      labelMargin = globalLabel && globalLabel.margin ? globalLabel.margin : labelMargin\n\n      if (labelShow) {\n        context.save()\n        context.font = `${labelFontSize}px`\n        context.fillStyle = labelColor == 'auto' ? lineItemColor : labelColor\n        context.textAlign = 'center'\n\n        lineItem.data.forEach(dataItem => {\n          let { x, y, data } = dataItem\n\n          if (typeof data !== 'number') return\n\n          if (xAxis.type == 'category') {\n            if (maxData >= 0 && minData >= 0) {\n              context.textBaseline = 'bottom'\n              context.fillText(data, x, y - labelMargin)\n            } else if (maxData <= 0 && minData <= 0) {\n              context.textBaseline = 'top'\n              context.fillText(data, x, y + labelMargin)\n            } else {\n              if (data) {\n                context.textBaseline = 'bottom'\n                context.fillText(data, x, y - labelMargin)\n              } else {\n                context.textBaseline = 'top'\n                context.fillText(data, x, y + labelMargin)\n              }\n            }\n          } else {\n            context.textBaseline = 'bottom'\n            context.fillText(data, x, y - labelMargin)\n          }\n        })\n\n        context.restore()\n      }\n    }\n  })\n\n  console.log('complete drawChartLine', process)\n}\n","import { avoidCollision, convertCoordinateOrigin } from '../../util/util'\n\nexport default function drawChartPie(process) {\n  let { context, opts, chartData } = this\n  let { backgroundColor, label: globalLabel } = opts\n  let { data, center, radius, format, offsetAngle, disablePieStroke, valueSum } = chartData.chartPie\n  let [centerX, centerY] = center\n  let [radiusMin, radiusMax] = radius\n  let _start_ = 0\n\n  data.forEach(dataItem => {\n    dataItem._proportion_ = (dataItem.value / valueSum) * process\n    dataItem._start_ = _start_\n    if (offsetAngle !== 0) {\n      dataItem._start_ += (offsetAngle * Math.PI) / 180\n    }\n\n    context.beginPath()\n\n    context.moveTo(centerX, centerY)\n    context.arc(centerX, centerY, radiusMax, dataItem._start_, dataItem._start_ + 2 * dataItem._proportion_ * Math.PI)\n    context.lineWidth = 2\n    context.strokeStyle = backgroundColor\n    context.fillStyle = dataItem.itemStyle.color\n    context.fill()\n    if (!disablePieStroke) {\n      context.stroke()\n    }\n\n    if (radiusMin > 0) {\n      context.beginPath()\n      context.moveTo(centerX, centerY)\n      context.arc(centerX, centerY, radiusMin, dataItem._start_, dataItem._start_ + 2 * dataItem._proportion_ * Math.PI)\n      context.fillStyle = backgroundColor\n      context.strokeStyle = backgroundColor\n      context.stroke()\n      context.fill()\n    }\n\n    _start_ += 2 * dataItem._proportion_ * Math.PI\n  })\n\n  // 绘制文本标签\n  if (process == 1) {\n    let { label: seriesLabel, labelLine } = chartData.chartPie\n    let { show: labelShow, fontSize: labelFontSize, color: labelColor, margin: labelMargin } = seriesLabel\n    let { length1, length2, lineWidth, lineDotRadius } = labelLine\n    let lineRadius = radiusMax + length1\n    let lastOrigin = null\n\n    // globalLabel 权重大于 seriesLabel\n    labelShow = globalLabel && typeof globalLabel.show == 'boolean' ? globalLabel.show : labelShow\n    labelFontSize = globalLabel && globalLabel.fontSize ? globalLabel.fontSize : labelFontSize\n    labelColor = globalLabel && globalLabel.color ? globalLabel.color : labelColor\n    labelMargin = globalLabel && globalLabel.margin ? globalLabel.margin : labelMargin\n\n    if (labelShow) {\n      data.forEach((dataItem, dataIndex) => {\n        let arc = 2 * Math.PI - (dataItem._start_ + (2 * Math.PI * dataItem._proportion_) / 2)\n        let text = format ? format(dataItem.value, name) : `${(+dataItem._proportion_ * 100).toFixed(2)}%`\n\n        // length1 start\n        let length1StartOrigin = {\n          x: Math.cos(arc) * radiusMax,\n          y: Math.sin(arc) * radiusMax,\n        }\n        // length2 start\n        let length2StartOrigin = {\n          x: Math.cos(arc) * lineRadius,\n          y: Math.sin(arc) * lineRadius,\n        }\n        // length2 end\n        let length2EndOrigin = {\n          x: length2StartOrigin.x >= 0 ? length2StartOrigin.x + length2 : length2StartOrigin.x - length2,\n          y: length2StartOrigin.y,\n        }\n\n        length2EndOrigin = avoidCollision(length2EndOrigin, lastOrigin, Math.max(lineDotRadius, labelFontSize / 2) * 2)\n        lastOrigin = length2EndOrigin\n\n        let length1StartPosition = convertCoordinateOrigin(length1StartOrigin, center)\n        let length2StartPosition = convertCoordinateOrigin(length2StartOrigin, center)\n        let length2EndPosition = convertCoordinateOrigin(length2EndOrigin, center)\n\n        // text start\n        context.font = `${labelFontSize}px`\n        let textWidth = context.measureText(text).width\n        let textStartPosition = Object.assign({}, length2EndPosition)\n        if (length2EndOrigin.x > 0) {\n          textStartPosition.x += lineDotRadius + labelMargin\n        } else {\n          textStartPosition.x -= textWidth + lineDotRadius + labelMargin\n        }\n\n        context.beginPath()\n        context.moveTo(length1StartPosition.x, length1StartPosition.y)\n        context.quadraticCurveTo(length2StartPosition.x, length2StartPosition.y, length2EndPosition.x, length2EndPosition.y)\n        context.lineWidth = lineWidth\n        context.strokeStyle = dataItem.itemStyle.color\n        context.stroke()\n        context.closePath()\n\n        context.beginPath()\n        context.moveTo(length2EndPosition.x, length2EndPosition.y)\n        context.arc(length2EndPosition.x, length2EndPosition.y, lineDotRadius, 0, 2 * Math.PI)\n        context.closePath()\n        context.fillStyle = dataItem.itemStyle.color\n        context.fill()\n\n        context.font = `${labelFontSize}px`\n        context.textBaseline = 'middle'\n        context.fillStyle = labelColor == 'auto' ? dataItem.itemStyle.color : labelColor\n        context.fillText(text, textStartPosition.x, textStartPosition.y)\n      })\n    }\n  }\n\n  console.log('complete drawChartPie', process)\n}\n","import { convertCoordinateOrigin } from '../../util/util'\n\nexport default function drawChartRadar(process) {\n  let { context, opts, chartData } = this\n  let { label: globalLabel } = opts\n  let { center } = chartData.radarAxis\n\n  chartData.chartRadar.forEach(radarItem => {\n    let { dataPosition, itemStyle, area, line, symbol, label } = radarItem\n    let { show: areaShow, color: areaColor, opacity: areaOpactiy } = area\n    let { show: lineShow, lineWidht, color: lineColor, opacity: lineOpacity } = line\n    let { show: symbolShow, type: symbolType, size: symbolSize, color: symbolColor } = symbol\n    let { show: labelShow, fontSize: labelFontSize, color: labelColor, margin: labelMargin } = label\n\n    context.beginPath()\n    dataPosition.forEach((dataItem, dataIndex) => {\n      let point = JSON.parse(JSON.stringify(dataItem.point))\n      point.x = point.x * process\n      point.y = point.y * process\n\n      let position = convertCoordinateOrigin(point, center)\n      let { x: positionX, y: positionY } = position\n      dataItem.position = position\n\n      if (dataIndex == 0) {\n        context.moveTo(positionX, positionY)\n      } else {\n        context.lineTo(positionX, positionY)\n      }\n    })\n    context.closePath()\n\n    if (areaShow) {\n      context.save()\n      context.globalAlpha = areaOpactiy\n      context.fillStyle = areaColor == 'auto' ? itemStyle.color : areaColor\n      context.fill()\n      context.stroke()\n      context.restore()\n    }\n\n    if (lineShow) {\n      context.save()\n      context.lineWidht = lineWidht\n      context.globalAlpha = lineOpacity\n      context.strokeStyle = lineColor == 'auto' ? itemStyle.color : lineColor\n      context.stroke()\n      context.restore()\n    }\n\n    if (process == 1) {\n      if (symbolShow) {\n        switch (symbolType) {\n          case 'circle':\n            context.save()\n            dataPosition.forEach(dataItem => {\n              let { x: positionX, y: positionY } = dataItem.position\n              context.beginPath()\n              context.arc(positionX, positionY, symbolSize / 2, 0, Math.PI * 2)\n              context.fillStyle = symbolColor == 'auto' ? itemStyle.color : symbolColor\n              context.fill()\n\n              context.beginPath()\n              context.arc(positionX, positionY, symbolSize / 4, 0, Math.PI * 2)\n              context.fillStyle = '#fff'\n              context.fill()\n            })\n            context.restore()\n            break\n        }\n      }\n\n      // globalLabel 权重大于 seriesLabel\n      labelShow = globalLabel && typeof globalLabel.show == 'boolean' ? globalLabel.show : labelShow\n      labelFontSize = globalLabel && globalLabel.fontSize ? globalLabel.fontSize : labelFontSize\n      labelColor = globalLabel && globalLabel.color ? globalLabel.color : labelColor\n      labelMargin = globalLabel && globalLabel.margin ? globalLabel.margin : labelMargin\n\n      if (labelShow) {\n        context.save()\n        context.font = `${labelFontSize}px`\n        context.fillStyle = labelColor == 'auto' ? itemStyle.color : labelColor\n        context.textAlign = 'center'\n        context.textBaseline = 'bottom'\n\n        dataPosition.forEach(dataItem => {\n          let { x, y } = dataItem.position\n          context.fillText(dataItem.data, x, y - labelMargin)\n        })\n      }\n    }\n  })\n\n  console.log('complete drawChartRadar', process)\n}\n","export default function drawChartScatter(process) {\n  let { context, opts, chartData } = this\n  let { label: globalLabel } = opts\n\n  chartData.chartScatter.forEach(scatterItem => {\n    let { name: scatterItemName, data, label, itemStyle, opacity, lineWidth, strokeColor } = scatterItem\n    let { show: labelShow, fontSize: labelFontSize, color: labelColor, margin: labelMargin } = label\n    let { color: scatterItemColor } = itemStyle\n\n    data.forEach(dataItem => {\n      let { positionX, positionY, radius, color: dataItemColor } = dataItem\n      context.save()\n      context.beginPath()\n      context.arc(positionX, positionY, radius * process, 0, Math.PI * 2)\n      if (lineWidth > 0) {\n        context.strokeStyle = strokeColor == 'auto' ? dataItemColor : strokeColor\n        context.lineWidth = 0\n        context.stroke()\n      }\n      context.fillStyle = dataItemColor\n      context.globalAlpha = opacity\n      context.fill()\n      context.restore()\n    })\n\n    if (process == 1) {\n      // globalLabel 权重大于 seriesLabel\n      labelShow = globalLabel && typeof globalLabel.show == 'boolean' ? globalLabel.show : labelShow\n      labelFontSize = globalLabel && globalLabel.fontSize ? globalLabel.fontSize : labelFontSize\n      labelColor = globalLabel && globalLabel.color ? globalLabel.color : labelColor\n      labelMargin = globalLabel && globalLabel.margin ? globalLabel.margin : labelMargin\n\n      if (labelShow) {\n        context.save()\n        context.font = `${labelFontSize}px`\n        context.fillStyle = labelColor == 'auto' ? scatterItemColor : labelColor\n\n        data.forEach(dataItem => {\n          let { y, z, radius, name, positionX, positionY } = dataItem\n          let text = name ? name : z ? z : scatterItemName\n\n          if (typeof scatterItemColor !== 'string') {\n            context.textAlign = 'center'\n            context.textBaseline = 'bottom'\n            context.fillText(text, positionX, positionY - radius - labelMargin)\n          } else {\n            context.textAlign = 'center'\n            context.textBaseline = 'middle'\n            context.fillText(text, positionX, positionY)\n          }\n        })\n        context.restore()\n      }\n    }\n  })\n\n  console.log('complete drawChartScatter', process)\n}\n","export default function drawChartPie(process) {\n  let { context, opts, chartData } = this\n  let { data, funnelAlign, itemStyle, label: seriesLabel } = chartData.chartFunnel\n  let { borderColor, borderWidth } = itemStyle\n\n  data.forEach(dataItem => {\n    let { point, itemStyle: dataItemStyle } = dataItem\n    let { color: dataItemColor } = dataItemStyle\n\n    context.beginPath()\n    point.forEach((pointItem, pointIndex) => {\n      let { x, y } = pointItem\n      if (pointIndex == 0) {\n        context.moveTo(x, y * process)\n      } else {\n        context.lineTo(x, y * process)\n      }\n    })\n    context.closePath()\n\n    if (borderWidth > 0) {\n      context.strokeStyle = borderColor\n      context.lineWidth = borderWidth\n      context.stroke()\n    }\n    context.fillStyle = dataItemColor\n    context.fill()\n  })\n\n  // 绘制文本标签\n  if (process == 1) {\n    let { label: globalLabel } = opts\n    let { show: labelShow, fontSize: labelFontSize, color: labelColor, margin: labelMargin, position: labelPosition } = seriesLabel\n    // globalLabel 权重大于 seriesLabel\n    labelShow = globalLabel && typeof globalLabel.show == 'boolean' ? globalLabel.show : labelShow\n    labelFontSize = globalLabel && globalLabel.fontSize ? globalLabel.fontSize : labelFontSize\n    labelColor = globalLabel && globalLabel.color ? globalLabel.color : labelColor\n    labelMargin = globalLabel && globalLabel.margin ? globalLabel.margin : labelMargin\n\n    if (labelShow) {\n      context.save()\n      data.forEach(dataItem => {\n        let { name, itemStyle: dataItemStyle, textPoint } = dataItem\n        let { x, y } = textPoint\n\n        if (labelPosition == 'inside') {\n          context.textAlign = 'center'\n          context.textBaseline = 'middle'\n          context.font = `${labelFontSize}px`\n          context.strokeStyle = dataItemStyle.color\n          context.fillStyle = '#ffffff'\n          context.strokeText(name, x, y)\n          context.fillText(name, x, y)\n        } else {\n          if (funnelAlign == 'right') {\n            // 右对齐\n            context.textAlign = 'right'\n          } else {\n            // 左对齐 左右对称\n            context.textAlign = 'left'\n          }\n          context.textBaseline = 'middle'\n          context.font = `${labelFontSize}px`\n          context.fillStyle = labelColor == 'auto' ? dataItemStyle.color : labelColor\n          context.fillText(name, x, y)\n        }\n      })\n      context.restore()\n    }\n  }\n\n  console.log('complete drawChartFunnel', process)\n}\n","import Animation from '../../util/animation'\n\nimport calSeriesColor from '../../calculate/calSeriesColor'\nimport calLegendData from '../../calculate/calLegendData'\nimport calAxisData from '../../calculate/calAxisData'\nimport calAxisRadarData from '../../calculate/calAxisRadarData'\n\nimport calChartBarData from '../../calculate/calChartBarData'\nimport calChartLineData from '../../calculate/calChartLineData'\nimport calChartPieData from '../../calculate/calChartPieData'\nimport calChartRadarData from '../../calculate/calChartRadarData'\nimport calChartScatterData from '../../calculate/calChartScatterData'\nimport calChartFunnelData from '../../calculate/calChartFunnelData'\n\nimport drawBackground from '../drawBackground'\nimport drawLegend from '../drawLegend'\nimport drawAxis from '../drawAxis'\nimport drawAxisRadar from '../drawAxisRadar'\n\nimport drawChartBar from './drawChartBar'\nimport drawChartLine from './drawChartLine'\nimport drawChartPie from './drawChartPie'\nimport drawChartRadar from './drawChartRadar'\nimport drawChartScatter from './drawChartScatter'\nimport drawChartFunnel from './drawChartFunnel'\n\nexport default function drawCharts() {\n  let { type, animation, animationDuration, animationTiming } = this.opts\n  let onProcessFn = function() {}\n\n  this.animationInstance && this.animationInstance.stop()\n\n  calSeriesColor.call(this)\n  calLegendData.call(this)\n\n  switch (type) {\n    case 'bar':\n      calAxisData.call(this)\n      calChartBarData.call(this)\n\n      onProcessFn = process => {\n        drawBackground.call(this)\n        drawAxis.call(this)\n        drawChartBar.call(this, process)\n\n        if (process == 1) {\n          drawLegend.call(this)\n        }\n      }\n      break\n    case 'line':\n      calAxisData.call(this)\n      calChartLineData.call(this)\n\n      onProcessFn = process => {\n        drawBackground.call(this)\n        drawAxis.call(this)\n        drawChartLine.call(this, process)\n\n        if (process == 1) {\n          drawLegend.call(this)\n        }\n      }\n      break\n    case 'pie':\n      calChartPieData.call(this)\n\n      onProcessFn = process => {\n        drawBackground.call(this)\n        drawChartPie.call(this, process)\n\n        if (process == 1) {\n          drawLegend.call(this)\n        }\n      }\n      break\n    case 'radar':\n      calAxisRadarData.call(this)\n      calChartRadarData.call(this)\n\n      onProcessFn = process => {\n        drawBackground.call(this)\n        drawAxisRadar.call(this)\n        drawChartRadar.call(this, process)\n\n        if (process == 1) {\n          drawLegend.call(this)\n        }\n      }\n      break\n    case 'scatter':\n      calAxisData.call(this)\n      calChartScatterData.call(this)\n\n      onProcessFn = process => {\n        drawBackground.call(this)\n        drawAxis.call(this)\n        drawChartScatter.call(this, process)\n\n        if (process == 1) {\n          drawLegend.call(this)\n        }\n      }\n      break\n    case 'funnel':\n      calChartFunnelData.call(this)\n\n      onProcessFn = process => {\n        drawBackground.call(this)\n        drawChartFunnel.call(this, process)\n\n        if (process == 1) {\n          drawLegend.call(this)\n        }\n      }\n      break\n  }\n\n  this.animationInstance = new Animation({\n    type,\n    animation,\n    animationDuration,\n    animationTiming,\n    onProcess: onProcessFn,\n    onAnimationFinish: () => {\n      this.event.trigger('renderComplete')\n    },\n  })\n}\n","import Event from './util/event'\nimport Config from './config'\nimport { replenishData, calOptions, calSeries } from './calculate/calOptions'\nimport drawCharts from './draw/drawCharts/drawCharts'\n\nclass Charts {\n  constructor(opts = {}) {\n    this.config = Object.assign({}, Config)\n    this.opts = Object.assign({}, opts)\n    this.context = this.opts.element.getContext('2d')\n    this.chartData = {}\n\n    // 绑定事件\n    this.event = new Event()\n    this.event.addEventListener('renderComplete', opts.onRenderComplete)\n\n    // 将opts的数据补充完整\n    calOptions.call(this)\n\n    // 绘制图表\n    drawCharts.call(this)\n  }\n\n  updateData(data = {}) {\n    if (this.opts.type == 'pie' || this.opts.type == 'funnel') {\n      Object.keys(data).forEach(dataKey => {\n        replenishData(dataKey, data, this.opts, true)\n      })\n    } else {\n      Object.keys(data).forEach(dataKey => {\n        if (dataKey == 'series') {\n          this.opts.series = JSON.parse(JSON.stringify(data.series))\n          calSeries.call(this)\n        } else {\n          replenishData(dataKey, data, this.opts, true)\n        }\n      })\n    }\n\n    console.log('complete updateData', this)\n\n    drawCharts.call(this)\n  }\n}\n\nexport default Charts\n"],"names":["Event","[object Object]","this","events","type","listener","push","params","forEach","apply","e","console","error","animation","animationDuration","animationTiming","backgroundColor","colors","label","show","fontSize","color","margin","legend","marginTop","itemGap","shapeWidth","shapeHeight","textStyle","padding","bar","barMaxWidth","barMinWidth","barWidth","barGap","pie","center","radius","offsetAngle","disablePieStroke","labelLine","lineDotRadius","lineWidth","length1","length2","scatter","opacity","strokeColor","funnel","width","height","top","left","right","bottom","max","min","gap","shape","sort","funnelAlign","position","itemStyle","borderColor","borderWidth","line","smooth","connectNulls","symbol","size","area","radar","radarAxis","splitNumber","axisName","axisLine","lineStyle","splitLine","splitArea","odd","even","yAxis","text","align","axisLabel","rotate","axisTick","length","axisSplitLine","xAxis","boundaryGap","alignWithLabel","HEX2HSL","hex","result","exec","r","parseInt","g","b","h","s","Math","l","d","round","convertCoordinateOrigin","origin","centerX","centerY","x","y","isCollision","souce","target","distance","percentToNum","percent","String","replace","Number","isObject","data","Object","prototype","toString","call","isArray","replenishData","key","sources","isCover","keys","_key","sourcesItem","sourcesIndex","concat","assign","calOptions","config","opts","calSeries","series","seriesItem","easeIn","pos","pow","easeOut","easeInOut","linear","Animation","isStop","onProcess","onAnimationFinish","animationFrame","requestAnimationFrame","setTimeout","step","timeStamp","Date","timingFunction","Timing","startTimeStamp","process","bind","calSeriesColor","colorsLength","a","value","dataItem","dataIndex","seriesIndex","calLegendData","context","seriesDataList","legendWidth","legendWidthNum","legendList","currentRow","font","seriesDataItem","name","measureText","itemWidth","obj","legendData","legendHeight","calAxisYData","yZero","yPlusSpacing","yMinusSpacing","ySpacing","yEachSpacing","xZero","xPlusSpacing","xMinusSpacing","xSpacing","xEachSpacing","yMaxData","yMinData","yDataRange","xMaxData","xMinData","xDataRange","chartData","xAxisShow","xAxisType","xAxisData","xAxisBoundaryGap","xAxisMax","xAxisMin","xAxisSplitNumber","format","xAxisFormat","xAxisName","xAxisLabel","xAxisTick","xAxisLine","xAxisSplitLine","yAxisShow","yAxisType","yAxisData","yAxisBoundaryGap","yAxisMax","yAxisMin","yAxisSplitNumber","yAxisFormat","yAxisName","yAxisLabel","yAxisTick","yAxisLine","yAxisSplitLine","xAxisNameShow","xAxisNameTextStyle","xAxisNameGap","xAxisNameText","xAxisLabelShow","xAxisLabelTextStyle","xAxisLabelGap","xAxisLabelRotate","showIndex","xAxisLabelShowIndex","xAxisTickShow","xAxisTickStyle","xAxisTickLength","xAxisTickAlign","xAxisTickShowIndex","xAxisLineShow","xAxisLineStyle","xAxisSplitLineShow","xAxisSplitLineStyle","xAxisSplitLineAlign","xAxisSplitLineShowIndex","yAxisNameShow","yAxisNameTextStyle","yAxisNameGap","yAxisNameText","yAxisLabelShow","yAxisLabelTextStyle","yAxisLabelGap","yAxisLabelShowIndex","yAxisTickShow","yAxisTickStyle","yAxisTickLength","yAxisTickAlign","yAxisTickShowIndex","yAxisLineShow","yAxisLineStyle","yAxisSplitLineShow","yAxisSplitLineStyle","yAxisSplitLineAlign","yAxisSplitLineShowIndex","xAxisNameFontSize","xAxisLabelFontSize","xAxisTickLineWidth","xAxisLineWidth","xAxisSplitLineWidth","yAxisNameFontSize","yAxisLabelFontSize","yAxisTickLineWidth","yAxisLineWidth","yAxisSplitLineWidth","xStart","xEnd","yStart","yEnd","xStartInit","yStartInit","yIsSamePart","xIsSamePart","calAxisValue","axis","allDataArr","reduce","dataArr","allDataObject","JSON","parse","stringify","stack","stackDataArr","axisLabelDataArr","maxData","minData","dataRange","dataEachRange","limit","multiple","isSamePart","ceil","floor","unshift","toFixed","i","axisData","xAxisLabelPoint","xAxisTickPoint","xAxisLinePoint","xAxisSplitLinePoint","xAxisNamePoint","yAxisLabelPoint","yAxisTickPoint","yAxisLinePoint","yAxisSplitLinePoint","yAxisNamePoint","xAxisLabelDataArr","yAxisLabelDataArr","xAxisLabelMaxWidth","xAxisLabelMaxHeight","xAxisLabelTextArr","abs","sin","PI","cos","yAxisLabelMaxWidth","yAxisLabelTextArr","xSpacingNumber","ySpacingNumber","xAxisNameTextWidth","arr","item","index","spacing","_xStart","startX","startY","endX","endY","_yStart","map","isShow","some","yAxisSplitLineNumber","yAxisTickNumber","xAxisSplitLineNumber","xAxisTickNumber","calAxisRadarData","categories","radarAxisName","radarAxisNameShow","radarAxisNameTextStyle","radarAxisNameFontSize","radarAxisNameMargin","lineEndPosition","namePosition","spacingAangle","start","scale","endPoint","point","calChartBarData","autoWidth","autoWidthNumber","sumWidth","valueAxisPlusSpacing","valueAxisMinusSpacing","valueAxisSpacing","categoryAxisEachSpacing","categoryAxisData","chartBar","len","chartBarArrItem","barItemArr","barItemArrIndex","barItem","barIndex","chartBarArrIndex","yPositive","yNagative","barHeight","xPositive","xNagative","calChartLineData","chartLine","chartLineArr","itemHeight","calChartPieData","chartPie","radius1","radius2","valueSum","sum","calChartRadarData","chartRadar","radarItem","dataPosition","calChartScatterData","chartScatter","radiusMax","radiusMin","radiusRange","zMax","zMin","zRange","HSLColorMax","HSLColorMin","HSLColorRange","scatterItemColor","sortData","z","HEXColorMin","HEXColorMax","positionX","positionY","HSLColor","hsl","hue2rgb","p","q","t","toHex","HSL2HEX","chartFunnel","funnelWidth","funnelHeight","containerWidth","containerHeight","pointX","pointY","funnelItemHeight","medianWidth","textPoint","drawBackground","fillStyle","fillRect","drawLegend","legendType","legendHeightMax","listItem","listIndex","legendItem","beginPath","moveTo","arc","closePath","fill","lineLength","lineTo","strokeStyle","stroke","save","textAlign","textBaseline","fillText","restore","drawAxisY","xAxisNameColor","xAxisLabelColor","xAxisTickLineColor","xAxisLineColor","xAxisSplitLineColor","yAxisNameColor","yAxisLabelColor","yAxisTickLineColor","yAxisLineColor","yAxisSplitLineColor","translate","drawAxisRadar","radarAxisShape","radarAxisLine","radarAxisSplitLine","radarAxisSplitArea","radarAxisLineShow","radarAxisLineStyle","radarAxisSplitLineShow","radarAxisSplitLineStyle","radarAxisNameColor","radarAxisLineColor","radarAxisLineWidth","radarAxisSplitLineColor","radarAxisSplitLineWidth","oddSplitAreaShow","oddSplitAreaColor","oddSplitAreaOpacity","evenSplitAreaShow","evenSplitAreaColor","evenSplitAreaOpacity","splitPositionArr","splitIndex","oddOrEven","splitPositionItem","splitPositionIndex","globalAlpha","lineEndPositionItem","namePositionItem","drawChartPie","globalLabel","barItemColor","barItemShow","labelShow","labelFontSize","labelColor","labelMargin","strokeText","drawChartLine","isNotMiddlePoint","drawLine","lineShow","lineColor","lineOpacity","lineItemColor","lineJoin","drawArea","lineStartX","lineStartY","lineEndX","lineEndY","areaShow","areaColor","areaOpacity","lineItem","symbolShow","symbolType","symbolSize","symbolColor","validData","filter","pAx","pAy","pBx","pBy","last","bezierCurveTo","_start_","_proportion_","seriesLabel","lineRadius","lastOrigin","length1StartOrigin","length2StartOrigin","length2EndOrigin","avoidCollision","length1StartPosition","length2StartPosition","length2EndPosition","textWidth","textStartPosition","quadraticCurveTo","drawChartRadar","areaOpactiy","lineWidht","drawChartScatter","scatterItem","scatterItemName","dataItemColor","dataItemStyle","pointItem","pointIndex","labelPosition","drawCharts","onProcessFn","animationInstance","stop","calAxisData","drawAxis","drawChartBar","calChartFunnelData","drawChartFunnel","event","trigger","Config","element","getContext","addEventListener","onRenderComplete","dataKey"],"mappings":"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"}